{"version":3,"sources":["static/images/avatar.jpeg","serviceWorker.js","components/shared/user-type-enum.js","components/shared/Error.js","components/user/login.js","components/user/logout.js","components/user/check-user-type.js","components/sidebar/sidebar.js","components/nav/nav.js","components/shared/install.js","components/shared/loading.js","components/user/driver-register.js","components/user/driver-info.js","components/user/driver-profile.js","components/vehicle/crash-report.js","components/vehicle/add-vehicle.js","components/user/driver-history.js","driver-root.js","components/order/order-detail.js","components/user/user-profile.js","components/user/driver-list.js","components/order/order-list.js","components/order/order-add.js","customer-root.js","components/user/authorizer-drivers.js","authorizer-root.js","components/admin/edit-driver.js","components/admin/add-driver.js","components/admin/all-driver-list.js","components/admin/edit-customer.js","components/admin/all-customers-list.js","admin-root.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","FILES_TO_CACHE","addEventListener","evt","console","log","waitUntil","caches","open","then","cache","addAll","skipWaiting","keys","keyList","Promise","all","map","key","delete","clients","claim","request","url","mode","UserType","Error","error","useState","visible","setVisible","title","onOk","cancelButtonProps","type","okText","cancelText","message","gql","LOGIN_MUTATION","Login","props","username","setUsername","password","setPassword","userType","showModal","handleCancel","e","handleSubmit","event","tokenAuth","client","a","preventDefault","res","localStorage","setItem","data","token","toLowerCase","writeData","removeItem","mutation","variables","loading","called","block","onClick","disabled","okButtonProps","href","onCancel","size","placeholder","onChange","target","value","prefix","UserOutlined","Password","KeyOutlined","Logout","handleSignout","SubMenu","Menu","Sider","Layout","Sidebar","width","className","defaultOpenKeys","style","height","borderRight","icon","InboxOutlined","isLoggedIn","Item","to","currentUser","id","CarOutlined","CheckOutlined","Header","Content","Nav","content","theme","defaultSelectedKeys","Title","Typography","Install","deferredPrompt","banner","document","querySelector","undefined","prompt","userChoice","result","outcome","level","DownloadOutlined","Component","Loading","spinnerColor","spinnerWidth","formItemLayout","labelCol","span","wrapperCol","REGISTER_MUTATION","DriverRegister","usernameState","setUsernameState","email","setEmail","emailState","setEmailState","passwordState","setPasswordState","firstName","setFirstName","firstNameState","setFirstNameState","lastName","setLastName","lastNameState","setLastNameState","nationalId","setNationalId","NationalIdState","setNationalIdState","setBirthDay","birthDayState","setBirthDayState","phoneNo","setPhoneNo","phoneNoState","setPhoneNoState","setImage","normFile","file","Array","isArray","fileList","onCompleted","Modal","info","createDriver","name","label","getElementById","backgroundColor","date","valuePropName","getValueFromEvent","action","listType","UploadOutlined","offset","htmlType","Meta","Card","DriverInfo","driver","onFinish","values","user","birthday","defaultValue","rating","cover","alt","src","require","hoverable","description","DriverProfile","Option","Select","TextArea","Input","CrashReport","rows","AddVehicle","Group","compact","columns","dataIndex","GET_DRIVER_ORDERS","DriverHistory","state","bordered","pagination","showHeader","rowSelection","scroll","tableLayout","top","bottom","allInfo","query","driverLoad","order","push","kay","orderer","owner","deliverer","destAddress","destinationAddress","cost","transportationCost","dataSource","UserContext","React","createContext","DRIVER_QUERY","DriverRoot","Provider","exact","path","render","OrderDetail","selected","mapboxgl","accessToken","Map","container","center","zoom","success","this","setState","layout","UserProfile","customer","filters","text","onFilter","record","address","indexOf","Search","onSearch","enterButton","GET_CUSTOMER_DRIVERS","DriverList","orderColumns","orderInfo","customerDrivers","orders","orderLocation","latitude","longitude","status","driverStatus","history","score","GET_CUSTOMER_ORDERS","OrderList","customerOrders","orderStatus","NEW_ORDER_MUTATION","AddOrder","sourceAddress","setSourceAddress","setDestAddress","receiverName","setReceiverName","weight","setWeight","receiveDate","setReceiveDate","setExtraInfo","createOrder","trim","CUSTOMER_QUERY","CustomerRoot","GET_DRIVERS","AUTHORIZE_MUTATION","REMOVE_MUTATION","AuthorizeDrivers","unverifiedDrivers","verifyRemove","verifyDriver","authorizeData","handleSubmitAuthorize","deleteDriver","deleteData","handleSubmitDelete","AuthorizerRoot","editItemLayout","EditDriver","nationalID","birthDay","updateDriver","UPDATE_DRIVER","onComplete","moment","ADD_DRIVER","GET_ALL_DRIVERS","AllDriversList","visibleEdit","setVisibleEdit","visibleAdd","setVisibleAdd","driverClone","setDriverClone","position","up","left","allDrivers","editDelete","placement","shape","handleEdit","EditOutlined","handleDelete","MinusOutlined","EditCustomer","updateCustomer","GET_ALL_CUSTOMERS","AllCustomersList","customerClone","setCustomerClone","allCustomers","deleteCustomer","AdminRoot","ApolloClient","uri","fetchOptions","credentials","operation","getItem","setContext","headers","Authorization","clientState","defaults","isDriverLoggedIn","isCustomerLoggedIn","isAuthorizerLoggedIn","isAdminLoggedIn","IS_LOGGED_IN_QUERY","App","ME_QUERY","meData","me","ReactDOM","direction","locale","fa_IR","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cd9b495.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.f77e84cb.jpeg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // localhost/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  // TODO: correct this condition\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nconst STATIC_CACHE_NAME = 'static-cache-v1'\n\nconst FILES_TO_CACHE = [\n  './src/static/css/normalizer.css',\n  './src/static/font/Yekan.eot',\n  './src/static/font/Yekan.ttf',\n  './src/static/font/Yekan.eot',\n  './src/static/font/Yekan.woff',\n]\n\nwindow.addEventListener('install', (evt) => {\n  console.log('[ServiceWorker] Install');\n  // CODELAB: Precache static resources here.\n  evt.waitUntil(\n    caches.open(STATIC_CACHE_NAME).then((cache) => {\n      console.log('[ServiceWorker] Pre-caching offline page');\n      return cache.addAll(FILES_TO_CACHE);\n    })\n  );  \n  window.skipWaiting();\n});\n\n\nwindow.addEventListener('activate', (evt) => {\n  console.log('[ServiceWorker] Activate');\n  // CODELAB: Remove previous cached data from disk.\n  evt.waitUntil(\n    caches.keys().then((keyList) => {\n      return Promise.all(keyList.map((key) => {\n        if (key !== STATIC_CACHE_NAME) {\n          console.log('[ServiceWorker] Removing old cache', key);\n          return caches.delete(key);\n        }\n      }));\n    })\n  );\n  window.clients.claim();\n});\n\nwindow.addEventListener('fetch', (evt) => {\n  console.log('[ServiceWorker] Fetch', evt.request.url);\n  // CODELAB: Add fetch event handler here.\n  if (evt.request.mode !== 'navigate') {\n    // Not a page navigation, bail.\n    return;\n  }\n})","export const UserType = {\n    \"Driver\": 0,\n    \"Customer\": 1,\n    \"Authorizer\": 2,\n    \"Admin\": 3,\n};","import React, { useState } from \"react\";\nimport {Modal} from \"antd\";\n\nconst Error = ({ error }) => {\n  const [visible, setVisible] = useState(true);\n\n  return (\n   <Modal\n        title = \"خطا به وجود آمده است\"\n        visible={visible}\n        onOk = {() => {\n            setVisible(false);\n          }\n        }\n        cancelButtonProps={{ type: \"text\"}}\n        okText=\"تایید\"\n        cancelText=\" \"\n        >\n       <p>\n           متن خطا:\n           {error.message}\n       </p>\n   </Modal>\n  )\n};\n\n\nexport default (Error);","import {Button, Input, Modal} from 'antd';\nimport {KeyOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Mutation, Query} from \"react-apollo\";\nimport React, {useState} from \"react\";\n// import {gql} from \"apollo-boost\";\nimport { gql, useQuery } from '@apollo/client';\n\nimport {UserType} from \"../shared/user-type-enum\";\nimport Error from \"../shared/Error\";\nimport { ApolloConsumer } from \"react-apollo\";\n// import { Query } from \"react-apollo\";\n// import CheckUserType from \"./check-user-type\"\n\n\nconst Login = (props) => {\n    const [visible, setVisible] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    var userType = [];\n    userType[UserType[\"Driver\"]] = true;\n    userType[UserType[\"Customer\"]] = true;\n    userType[UserType[\"Authorizer\"]] = true;\n    userType[UserType[\"Admin\"]] = true;\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n    const handleCancel = e => {\n        console.log(e);\n        setVisible(false);\n    };\n\n\n    const handleSubmit = async (event, tokenAuth, client) => {\n        event.preventDefault();\n        const res = await tokenAuth();\n        localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\n\n        const key = UserType[props.type];\n        if (userType[key]) {\n            console.log(\"This is \" + props.type.toLowerCase() + \"!\");\n            switch (props.type) {\n                case(\"Driver\"):\n                    client.writeData({data: {\"isDriverLoggedIn\": true, \"isCustomerLoggedIn\": false, \"isAuthorizerLoggedIn\": false, \"isAdminLoggedIn\": false}});\n                    break;\n                case(\"Authorizer\"):\n                    client.writeData({data: {\"isDriverLoggedIn\": false, \"isCustomerLoggedIn\": false, \"isAuthorizerLoggedIn\": true, \"isAdminLoggedIn\": false}});\n                    break;\n                case(\"Customer\"):\n                    client.writeData({data: {\"isDriverLoggedIn\": false, \"isCustomerLoggedIn\": true, \"isAuthorizerLoggedIn\": false, \"isAdminLoggedIn\": false}});\n                    break;\n                case(\"Admin\"):\n                    client.writeData({data: {\"isDriverLoggedIn\": false, \"isCustomerLoggedIn\": false, \"isAuthorizerLoggedIn\": false, \"isAdminLoggedIn\": true}});\n                    break;\n            }\n            localStorage.setItem(\"userType\", key);\n\n        } else {\n            localStorage.removeItem(\"authToken\");\n            client.writeData({data: {\"isDriverLoggedIn\": false, \"isCustomerLoggedIn\": false, \"isAuthorizerLoggedIn\": false, \"isAdminLoggedIn\": false}});\n        }\n        setVisible(false);\n    };\n\n\n    return (\n\n        <Mutation mutation={LOGIN_MUTATION} variables={{\"username\": username, \"password\": password}}>\n            {(tokenAuth, {loading, error, called, client}) => {\n\n                const titles = [\n                    \"ورود راننده به سامانه\",\n                    \"ورود صاحب بار به سامانه\",\n                    \"ورود مدیراحراز هویت به سامانه\",\n                    \"ورود مدیر به سامانه\",\n                ];\n\n                return (\n\n                    <div>\n\n                        <Button block onClick={showModal} disabled = {loading}>\n                            {loading ? \"در حال ورود ...\" : \"ورود\"}\n                        </Button>‍\n                        <Modal\n                            title={titles[UserType[props.type]]}\n                            visible={visible}\n                            onOk={event => handleSubmit(event, tokenAuth, client)}\n                            okButtonProps={{ href: \"/\"}}\n                            onCancel={handleCancel}\n                            okText=\"ورود\"\n                            cancelText=\"لغو\"\n                        >\n                            <p>\n                                <Input size=\"large\" placeholder=\"نام کاربری\"\n                                       onChange={event => setUsername(event.target.value)}\n                                       prefix={<UserOutlined/>}/>\n                            </p>\n                            <p>\n                                <Input.Password size=\"large\" placeholder=\"رمز عبور\"\n                                                onChange={event => setPassword(event.target.value)}\n                                                prefix={<KeyOutlined/>}/>\n\n                            </p>\n\n                        </Modal>\n                        {error && <Error error={error} />}\n\n\n                    </div>\n                );\n\n            }}\n\n        </Mutation>\n    )\n};\n\n\n\nconst ME_QUERY = gql`\n    {\n        me{\n            isDriver\n            isAuthorizer\n            isCustomer\n            isSuperuser\n        }\n    }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nexport default (Login);\n","import {Button, Input, Modal} from 'antd';\nimport {KeyOutlined, UserOutlined} from \"@ant-design/icons\";\nimport {Mutation, Query} from \"react-apollo\";\nimport React, {useState} from \"react\";\n\nimport {UserType} from \"../shared/user-type-enum\";\nimport Error from \"../shared/Error\";\nimport { ApolloConsumer } from \"react-apollo\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport { HttpLink } from 'apollo-link-http';\nimport {execute} from 'apollo-link';\n\n\n\nconst Logout = (props) => {\n    const [visible, setVisible] = useState(false);\n\n\n    const handleSignout = client => {\n        localStorage.removeItem(\"authToken\");\n        localStorage.removeItem(\"userType\");\n\n        client.writeData({data: {\"isDriverLoggedIn\": false}});\n        client.writeData({data: {\"isCustomerLoggedIn\": false}});\n        client.writeData({data: {\"isAuthorizerLoggedIn\": false}});\n        console.log(\"Signed out user\", client);\n\n\n    };\n\n  return (\n    <ApolloConsumer>\n      {client => (\n        <div>\n\n            {/*<Link to=\"/\" onClick={() => setVisible(true)}>*/}\n            <Button block onClick={() => setVisible(true)}>\n            خروج\n            </Button>\n            {/*</Link>*/}\n            <Modal\n                title= \"آیا مطمئن هستید میخواهید خارج شوید؟\"\n                visible={visible}\n                onOk={() => handleSignout(client)}\n                onCancel={() => setVisible(false)}\n                okButtonProps={{ href: \"/\"}}\n                okText=\"بله\"\n                cancelText=\"خیر\"\n            >\n\n            </Modal>\n        </div>\n      )}\n    </ApolloConsumer>\n  );\n};\n\n\n\nexport default (Logout);\n","import {ApolloConsumer, Query} from \"react-apollo\";\nimport Error from \"./login\";\nimport React from \"react\";\nimport {gql} from \"@apollo/client\";\nimport {UserType} from \"../shared/user-type-enum\"\n\nconst CheckUserType = ({type}) => {\n\n    return(\n        <ApolloConsumer>\n            {client => (\n                <Query query={ME_QUERY}>\n                    {({data, loading, error}) => {\n                        if (loading) return <div> is Loading </div>;\n                        if (error) return <Error error={error}/>;\n\n\n                        console.log(data);\n                        var userType = [];\n                        userType[UserType[\"Driver\"]] = data.me.isDriver;\n                        userType[UserType[\"Customer\"]] = data.me.isCustomer;\n                        userType[UserType[\"Authorizer\"]] = data.me.isAuthorizer;\n\n                        const key = UserType[type];\n                        if (userType[key]) {\n                            console.log(\"This is \" + type.toLowerCase() + \"!\");\n                            switch (type) {\n                                case(\"Driver\"):\n                                    client.writeData({data: {\"isDriverLoggedIn\": true}});\n                                    client.writeData({data: {\"isCustomerLoggedIn\": false}});\n                                    client.writeData({data: {\"isAuthorizerLoggedIn\": false}});\n                                    break;\n                                case(\"Authorizer\"):\n                                    client.writeData({data: {\"isDriverLoggedIn\": false}});\n                                    client.writeData({data: {\"isCustomerLoggedIn\": false}});\n                                    client.writeData({data: {\"isAuthorizerLoggedIn\": true}});\n                                    break;\n                                case(\"Customer\"):\n                                    client.writeData({data: {\"isDriverLoggedIn\": false}});\n                                    client.writeData({data: {\"isCustomerLoggedIn\": true}});\n                                    client.writeData({data: {\"isAuthorizerLoggedIn\": false}});\n                                    break;\n                            }\n                            localStorage.setItem(\"userType\", key);\n\n                        } else {\n                            localStorage.setItem(\"authToken\", null);\n                            client.writeData({data: {\"isDriverLoggedIn\": false}});\n                            client.writeData({data: {\"isCustomerLoggedIn\": false}});\n                            client.writeData({data: {\"isAuthorizerLoggedIn\": false}});\n                        }\n                        console.log(\"FINISH\");\n                        return <div> </div>;\n                    }}\n                </Query>\n            )}\n        </ApolloConsumer>\n    )\n};\n\nconst ME_QUERY = gql`\n    {\n        me{\n            isDriver\n            isAuthorizer\n            isCustomer\n            isSuperuser\n        }\n    }\n`;\n\n\n\nexport default (CheckUserType);","import React, {Component, useState} from 'react'\nimport { Link } from 'react-router-dom';\nimport { CarOutlined, UserOutlined, KeyOutlined, InboxOutlined, CheckOutlined } from '@ant-design/icons';\nimport { Layout, Menu, Button, Modal, Input  } from 'antd';\nimport {Mutation, Query} from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport {UserType} from \"../shared/user-type-enum\";\nimport Login from \"../user/login\"\nimport Logout from \"../user/logout\"\nimport CheckUserType from \"../user/check-user-type\"\nimport './sidebar.css'\n\n\nconst { SubMenu } = Menu;\nconst { Sider } = Layout;\n\nconst Sidebar = (props) => {\n\n    return (\n        <Sider width={250} className=\"site-layout-background\">\n            <Menu\n                mode=\"inline\"\n                className=\"sidebar\"\n                // defaultSelectedKeys={['1']}\n                defaultOpenKeys={['sub1']}\n                style={{height: '100%', borderRight: 0}}\n            >\n                <SubMenu key=\"sub1\" icon={<InboxOutlined/>} title=\"صاحب بار\">\n                    {props.isLoggedIn[UserType[\"Customer\"]] || props.isLoggedIn[UserType[\"Driver\"]]\n                    || props.isLoggedIn[UserType[\"Authorizer\"]] || props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <div></div> :\n                        <Menu.Item key=\"14\">\n                            <Login type=\"Customer\"> </Login>\n                        </Menu.Item>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] ?\n                        <Menu.Item key=\"1\">\n                            <Link to={`/user/${props.currentUser.id}}/profile`}>\n                                پروفایل\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] ?\n                        <Menu.Item key=\"2\">\n                            <Link to={`/customer/${props.currentUser.id}}/orderList`}>\n                                سفارشات\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] ?\n                        <Menu.Item key=\"3\">\n                            <Link to={`/customer/${props.currentUser.id}}/addOrder`}>\n                                ثبت سفارش\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] ?\n                        <Menu.Item key=\"4\">\n                            <Link to={`/customer/${props.currentUser.id}}/driverList`}>\n                                لیست راننده‌ها\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n                </SubMenu>\n\n                {props.isLoggedIn[UserType[\"Customer\"]]?\n                    <Menu.Item key=\"30\">\n                        <Logout type=\"Customer\"/>\n                    </Menu.Item>\n                    : <div> </div>\n                }\n\n\n                <SubMenu key=\"sub3\" icon={<CarOutlined/>} title=\"راننده\">\n                    {props.isLoggedIn[UserType[\"Customer\"]] || props.isLoggedIn[UserType[\"Driver\"]]\n                    || props.isLoggedIn[UserType[\"Authorizer\"]] || props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <div></div> :\n                        <Menu.Item key=\"5\">\n                            <Login type=\"Driver\"> </Login>\n                            </Menu.Item>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] || props.isLoggedIn[UserType[\"Driver\"]]\n                    || props.isLoggedIn[UserType[\"Authorizer\"]] || props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <div></div> :\n                        <Menu.Item key=\"13\">\n                            <Link to='/driver/register'>\n                                <Button block>\n                                    ثبت نام\n                                </Button>\n                            </Link>\n                        </Menu.Item>\n                    }\n\n\n                    {props.isLoggedIn[UserType[\"Driver\"]] ?\n                        <Menu.Item key=\"20\">\n                            <Link to={`/driver/${props.currentUser.id}}/profile`}>\n                                پروفایل\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n\n                    {props.isLoggedIn[UserType[\"Driver\"]] ?\n                        <Menu.Item key=\"9\">\n                            <Link to={`/driver/${props.currentUser.id}}/history`}>\n                                تاریخچه بار\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n\n                    {props.isLoggedIn[UserType[\"Driver\"]] ?\n                        <Menu.Item key=\"10\">\n                            <Link to={`/driver/${props.currentUser.id}}/crash`}>\n                                اعلام حادثه\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n\n                    {props.isLoggedIn[UserType[\"Driver\"]] ?\n                        <Menu.Item key=\"11\">\n                            <Link to={`/driver/${props.currentUser.id}}/addVehicle`}>\n                                ثبت خودرو حمل‌بار جدید\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Driver\"]]?\n                        <Menu.Item key=\"40\">\n                            <Logout type=\"Driver\"/>\n                        </Menu.Item>\n                        : <div> </div>\n                    }\n\n                </SubMenu>\n\n                <SubMenu key=\"sub4\" icon={<CheckOutlined/>} title=\"مدیر احراز هویت\">\n\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] || props.isLoggedIn[UserType[\"Driver\"]] ||\n                     props.isLoggedIn[UserType[\"Authorizer\"]] || props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <div></div> :\n                        <Menu.Item key=\"14\">\n                            <Login type=\"Authorizer\"> </Login>\n                        </Menu.Item>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Authorizer\"]] ?\n                        <Menu.Item key=\"22\">\n                            <Link to={`/authorizer/${props.currentUser.id}}/authorizeDrivers`}>\n                                لیست درخواست های ثبت نام\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Authorizer\"]]?\n                        <Menu.Item key=\"30\">\n                            <Logout type=\"Customer\"/>\n                        </Menu.Item>\n                        : <div> </div>\n                    }\n\n\n                </SubMenu>\n\n                <SubMenu key=\"sub2\" icon={<UserOutlined/>} title=\"مدیر سامانه\">\n\n                    {props.isLoggedIn[UserType[\"Customer\"]] || props.isLoggedIn[UserType[\"Driver\"]] ||\n                     props.isLoggedIn[UserType[\"Authorizer\"]] || props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <div></div> :\n                        <Menu.Item key=\"17\">\n                            <Login type=\"Admin\"> </Login>\n                        </Menu.Item>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <Menu.Item key=\"23\">\n                            <Link to={`/admin/allAuthorizersList`}>\n                                لیست مدیران احراز هویت\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <Menu.Item key=\"23\">\n                            <Link to={`/admin/allCustomersList`}>\n                                لیست مشتریان\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Admin\"]] ?\n                        <Menu.Item key=\"23\">\n                            <Link to={`/admin/allDriversList`}>\n                                لیست راننده‌ها\n                            </Link>\n                        </Menu.Item>\n                        : <div></div>\n                    }\n\n                    {props.isLoggedIn[UserType[\"Admin\"]]?\n                        <Menu.Item key=\"30\">\n                            <Logout type=\"Admin\"/>\n                        </Menu.Item>\n                        : <div> </div>\n                    }\n\n\n\n                </SubMenu>\n            </Menu>\n        </Sider>\n    )\n\n};\n\n\nexport default (Sidebar);","import React, { Component } from 'react';\nimport { Layout, Menu } from 'antd';\nimport Sidebar from '../sidebar/sidebar'\nimport { Link } from 'react-router-dom'\n\nimport './nav.css'\n\nconst { Header, Content } = Layout;\n\nconst Nav = ({isLoggedIn, currentUser, content}) => {\n    return (\n        <Layout>\n            <Header className=\"header\">\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                <Menu.Item key=\"1\">\n                    <Link to=\"/\">\n                        خانه\n                    </Link>\n                </Menu.Item>\n\n                <Menu.Item key=\"2\">\n                    <Link to=\"/install\">\n                        نصب اپلیکیشن\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\">\n                    {/* <Link to=\"\"> */}\n                        تماس با ما\n                    {/* </Link> */}\n                </Menu.Item>\n                <Menu.Item key=\"4\">\n                    {/* <Link to=\"\"> */}\n                        درباره ما\n                    {/* </Link> */}\n                </Menu.Item>\n            </Menu>\n            </Header>\n            <Layout>\n                <Sidebar\n                    isLoggedIn = {isLoggedIn}\n                    currentUser = {currentUser}\n                />\n                <Layout className=\"nav-layout\">\n                    <Content\n                        className=\"site-layout-background\"\n                    >\n                    {content}\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    )\n};\n\nexport default (Nav);\n","import React, { Component } from \"react\";\nimport { Button, Typography } from \"antd\";\nimport { DownloadOutlined } from '@ant-design/icons';\n\nconst {Title} = Typography;\n\nexport default class Install extends Component {\n    componentDidMount() {\n        let deferredPrompt;\n        var banner = document.querySelector(\"#banner\");\n    \n        window.addEventListener(\"beforeinstallprompt\", (e) => {\n          e.preventDefault();\n          console.log(\"beforeinstallprompt fired! ^_^\");\n          deferredPrompt = e;\n          return false;\n        });\n    \n        banner.addEventListener(\"click\", () => {\n          if (deferredPrompt !== undefined) {\n            deferredPrompt.prompt();\n            deferredPrompt.userChoice.then((result) => {\n              if (result.outcome === \"dismissed\") {\n                console.log(\"cancelled\");\n              } else {\n                console.log(\"added to homescreen\");\n              }\n              deferredPrompt = null;\n            });\n          }\n        });\n      }\n\n    render() {\n        return (\n            <div>\n                <Title level={3}>\n                    برای نصب نرم‌افزار شرکت پربار کافی است که روی دکمه‌ی نصب زیر کلیک کنید.\n                </Title>\n                <div>\n                    <Button type=\"primary\" icon={<DownloadOutlined />} id=\"banner\" >\n                        نصب کردن برنامه‌ی موبایل\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Spinner from 'react-spinner-material';\n\nconst Loading = () => {\n  const percentage = 66;\n  return(\n\n    <div>\n      <Spinner size={120} spinnerColor={\"#333\"} spinnerWidth={2} visible={true} />\n    </div>\n\n  )\n};\n\n\n\nexport default (Loading);","import React, { useState } from 'react'\nimport { Component } from 'react'\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Error from \"../shared/Error\";\n\nimport {\n    Form,\n    Input,\n    Button,\n    Upload,\n    DatePicker, Modal,\n} from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n// import { useQuery, gql, useMutation } from \"@apollo/client\";\n\nimport './user.css'\n\n\n\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\n\nconst DriverRegister = () => {\n  const [username, setUsername] = useState(\"\");\n  const [usernameState, setUsernameState] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [emailState, setEmailState] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [passwordState, setPasswordState] = useState(false);\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameState, setFirstNameState] = useState(false);\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameState, setLastNameState] = useState(false);\n  const [nationalId, setNationalId] = useState(\"\");\n  const [NationalIdState, setNationalIdState] = useState(false);\n  const [birthDay, setBirthDay] = useState(null);\n  const [birthDayState, setBirthDayState] = useState(false);\n  const [phoneNo, setPhoneNo] = useState(\"\");\n  const [phoneNoState, setPhoneNoState] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [image, setImage] = useState(null);\n  const [imageState, setImageState] = useState(false);\n\n\n  const handleSubmit = (event, createDriver) => {\n      console.log(\"In the handleSubmit\");\n      event.preventDefault();\n      createDriver();\n  };\n\n  const normFile = e => {\n    console.log('Upload event:', e.file);\n    setImage(e.file);\n    if (Array.isArray(e)) {\n        return e;\n    }\n    return e && e.fileList;\n  };\n\n\n  function info(message) {\n      Modal.info({\n        title: message,\n        onOk() {},\n      });\n  }\n\n  return (\n    <div>\n        <Mutation\n          mutation={REGISTER_MUTATION}\n          variables={\n              {\n                  \"driverData\": {\n                      \"user\": {\n                          \"firstName\": firstName,\n                          \"lastName\": lastName,\n                          \"username\": username,\n                          \"email\": email,\n                          \"phoneNo\": phoneNo,\n                          \"password\": password\n                      },\n                      \"nationalId\": nationalId\n                      // \"birthday\": birthDay\n                  }\n              }\n          }\n\n          onCompleted={data => {\n            info(\" ثبت نام راننده در سامانه به صورت موفقیت آمیز ثبت شد\")\n          }}\n        >\n          {(createDriver, { loading, error }) => {\n            return (\n              <Form\n                className=\"registration-form\"\n                name=\"user registration\"\n                {...formItemLayout}\n                // onSubmit={event => handleSubmit(event, createUser)}\n              >\n\n\n                  <Form.Item label=\"نام\">\n                    <Input\n                        id = \"name\"\n                        onChange={event => {\n                                setFirstName(event.target.value);\n                                setFirstNameState(true);\n                            }\n                        }\n                        placeholder=\"مصطفی\"/>\n                  </Form.Item>\n\n                  <Form.Item label=\"نام خانوادگی\">\n                    <Input\n                        id = \"familyName\"\n                        onChange={event => {\n                                setLastName(event.target.value);\n                                setLastNameState(true);\n                            }\n                        }\n                        placeholder=\"خمینی\"/>\n                  </Form.Item>\n\n                  <Form.Item label=\"نام کاربری\">\n                    <Input\n                        id = \"username\"\n                        onChange={event => {\n                                setUsername(event.target.value);\n                                setUsernameState(true);\n                            }\n                        } />\n\n                  </Form.Item>\n\n                  <Form.Item label=\"رمز عبور\">\n                    <Input\n                        id = \"password\"\n                        onChange={event => {\n                                setPassword(event.target.value);\n                                setPasswordState(true);\n                            }\n                        }/>\n\n                  </Form.Item>\n\n                  <Form.Item label=\"ایمیل\" >\n                    <Input\n                        id = \"email\"\n                        onChange={event => {\n                            if(event.target.value.match(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,}$\") != null){\n                                setEmail(event.target.value);\n                                setEmailState(true);\n                                document.getElementById(\"email\").style.backgroundColor = 'white';\n                            }\n                            else {\n                                setEmailState(false);\n                                document.getElementById(\"email\").style.backgroundColor = 'pink';\n                            }\n                        }}/>\n                  </Form.Item>\n\n                  <Form.Item label=\"شماره تماس\">\n                    <Input\n                        id = \"phoneNumber\"\n                        onChange={event => {\n                            if(event.target.value.match(\"^[0-9]{8,11}$\") != null){\n                                setPhoneNo(event.target.value);\n                                setPhoneNoState(true);\n                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'white';\n                            }\n                            else {\n                                setPhoneNoState(false);\n                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'pink';\n                            }\n                        }}\n                        placeholder= \"09092929912\"/>\n                    </Form.Item>\n\n                  <Form.Item label=\"کد ملی\">\n                    <Input\n                        id = \"nationalId\"\n                        onChange={event => {\n                            if(event.target.value.match(\"^[0-9]{10}$\") != null){\n                                setNationalId(event.target.value);\n                                setNationalIdState(true);\n                                document.getElementById(\"nationalId\").style.backgroundColor = 'white';\n                            }\n                            else {\n                                document.getElementById(\"nationalId\").style.backgroundColor = 'pink';\n                                setNationalIdState(false);\n                            }\n                        }}\n                        placeholder=\"0020996519\"/>\n                  </Form.Item>\n\n                  <Form.Item label=\"تاریخ تولد\">\n                    <DatePicker id = \"birthDay\" onChange=\n                        {date => {\n                                setBirthDay(date);\n                                setBirthDayState(true);\n                            }\n                        }/>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"عکس پرسنلی\"\n                    label=\"عکس پرسنلی\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={normFile}\n                >\n                    <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                    <Button>\n                        <UploadOutlined /> عکس خود را انتخاب کنید\n                    </Button>\n                    </Upload>\n                </Form.Item>\n\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        disabled={\n                            loading ||\n                            !firstNameState ||\n                            !lastNameState ||\n                            !usernameState ||\n                            !NationalIdState ||\n                            !birthDayState||\n                            !emailState ||\n                            !passwordState ||\n                            !phoneNoState\n                        }\n                        onClick={event => handleSubmit(event, createDriver)}\n                    >\n                        {loading ? \"در حال ثبت کردن...\" : \"ثبت کن\"}\n                    </Button>\n                    {/*{error && <Error error={error} />}*/}\n\n                </Form.Item>\n                {/* Error Handling */}\n                {error && <Error error={error} />}\n              </Form>\n            );\n          }}\n        </Mutation>\n    </div>\n  );\n};\n\nconst REGISTER_MUTATION = gql`\n  mutation ($driverData: DriverInput!) {\n  createDriver(driverData: $driverData) {\n    driver{\n       user{\n        firstName\n        lastName\n       }\n    }\n  }\n}\n`;\n\n\nexport default (DriverRegister);","import React, { Component } from 'react'\nimport { \n    Card, \n    Row, \n    Col,\n    Form,\n    Input,\n    Rate,\n} from 'antd';\n\nconst { Meta } = Card;\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\n\n\nconst DriverInfo = ({driver}) => {\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n    };\n\n    return (\n        <Row>\n            <Col span={15}>\n                <Form\n                    name=\"user profile\"\n                    {...formItemLayout}\n                    onFinish={onFinish}\n                >\n                    <Form.Item label=\"نام\">\n                        <Input placeholder={driver.user.firstName} disabled/>\n                    </Form.Item>\n\n                    <Form.Item label=\"نام خانوادگی\">\n                        <Input value={driver.user.lastName} disabled/>\n                    </Form.Item>\n\n                    <Form.Item label=\"کد ملی\">\n                        <Input placeholder={driver.nationalId} type=\"tel\" disabled/>\n                    </Form.Item>\n\n                    <Form.Item label=\"تاریخ تولد\">\n                        <Input placeholder={driver.birthday} disabled/>\n                    </Form.Item>\n\n\n                    <Form.Item label=\"نام کاربری\">\n                        <Input value={driver.user.username} type=\"tel\" disabled/>\n                    </Form.Item>\n\n                    <Form.Item label=\"ایمیل\">\n                        <Input value={driver.user.email} type=\"tel\" disabled/>\n                    </Form.Item>\n\n                    <Form.Item label=\"شماره تماس\">\n                        <Input value={driver.user.phoneNo} type=\"tel\" disabled/>\n                    </Form.Item>\n\n\n                    <Form.Item label=\"امتیاز\">\n                        <Rate disabled defaultValue={driver.rating} />\n                    </Form.Item>\n\n                </Form>\n            </Col>\n            <Col span={9}>\n                <Card\n                    style={{ width: 320 }}\n                    cover={\n                    <img\n                        alt=\"User Profile\"\n                        src={require('../../static/images/avatar.jpeg')}\n                    />\n                    }\n                    hoverable\n                >\n                    <Meta\n                        title= {driver.firstName}\n                        description=\"راننده‌ی تریلر، خاور، وانت\"\n                    />\n                </Card>\n            </Col>\n\n\n\n        </Row>\n    )\n};\n\nexport default (DriverInfo);","import React, {Component, useState} from 'react'\nimport {\n    Divider,\n    Form,\n    Input,\n    Button, Modal,\n} from 'antd';\nimport { KeyOutlined } from '@ant-design/icons';\nimport DriverInfo from './driver-info';\n\nimport './user.css'\nimport {gql} from \"@apollo/client\";\nimport {Mutation, Query} from \"react-apollo\";\nimport Error from \"../shared/Error\";\n\nconst editItemLayout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 10 },\n};\n\n\n\nconst DriverProfile = ({driver}) => {\n    return(\n        <div className=\"user-profile\">\n            <Divider>مشخصات</Divider>\n            <DriverInfo driver={driver}/>\n        </div>\n    )\n};\n\n\nexport default (DriverProfile);\n\n\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Select,\n    Input,\n    Button,\n} from 'antd';\n\nimport './vehicle.css'\n\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nexport default class CrashReport extends Component {\n    render() {\n\n        const onFinish = values => {\n            console.log('Received values of form: ', values);\n        };\n\n        return (\n            <Form\n                className=\"vehicle-add-form\"\n                name=\"user registration\"\n                {...formItemLayout}\n                onFinish={onFinish}\n            >\n                <Form.Item label=\"انتخاب خودرو\">\n                    <Select placeholder=\"پلاک\">\n                        <Option value=\"1\">۴۷ ل ۷۳۹ ایران ۹۹</Option>\n                        <Option value=\"2\">۴۷ س ۲۳۴ ایران ۶۸</Option>\n\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"توضیحات\">\n                    <TextArea rows={4} placeholder=\"شرح وقوع حادثه\"/>\n                </Form.Item>\n\n                \n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"danger\" htmlType=\"submit\">\n                        گزارش حادثه\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Select,\n    Input,\n    Button,\n    Radio,\n} from 'antd';\n\nimport './vehicle.css'\n\nconst { Option } = Select;\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nexport default class AddVehicle extends Component {\n    render() {\n        const onFinish = values => {\n            console.log('Received values of form: ', values);\n        };\n\n        return (\n            <Form\n                className=\"vehicle-add-form\"\n                name=\"user registration\"\n                {...formItemLayout}\n                onFinish={onFinish}\n            >\n                <Form.Item label=\"نوع سواری\">\n                    <Select placeholder=\"انتخاب نوع سواری\">\n                        <Option value=\"trailer\">تریلر</Option>\n                        <Option value=\"truck\">کامیون</Option>\n                        <Option value=\"khavar\">خاور</Option>\n                        <Option value=\"vanet\">وانت</Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"مالک\">\n                    <Radio.Group>\n                        <Radio value=\"me\">خودم</Radio>\n                        <Radio value=\"company\">شرکت</Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item label=\"پلاک\">\n                    <Input.Group compact>\n                        <Form.Item style={{'width':'20%'}}>\n                            <Input placeholder=\"ایران\" />\n                        </Form.Item>\n                        <Form.Item style={{'width':'40%'}}>\n                            <Input placeholder=\"سه رقم سمت راست\"/>\n                        </Form.Item>\n                        <Form.Item style={{'width':'10%'}}>\n                            <Select placeholder=\"حرف\" style={{'width':'100%'}}>\n                                <Option value=\"trailer\">تریلر</Option>\n                                <Option value=\"truck\">کامیون</Option>\n                                <Option value=\"khavar\">خاور</Option>\n                                <Option value=\"vanet\">وانت</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item style={{'width':'30%'}}>\n                            <Input placeholder=\"دو رقم سمت چپ\"/>\n                        </Form.Item>\n                    </Input.Group>\n                </Form.Item>\n                \n                \n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        ثبت اطلاعات\n                    </Button>\n                </Form.Item>\n            </Form>\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { Table } from 'antd';\nimport {Query} from \"react-apollo\";\nimport {gql} from \"apollo-boost\";\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\";\n\n\nconst columns = [\n    {\n      title: 'صاحب بار',\n      dataIndex: 'orderer',\n    },\n    {\n      title: 'تحویل گیرنده',\n      dataIndex: 'deliverer',\n    },\n    {\n      title: 'هزینه ارسال',\n      dataIndex: 'cost',\n    },\n    {\n      title: 'مکان ارسال',\n      dataIndex: 'destAddress',\n    },\n];\n\nconst DriverHistory = ({driver}) => {\n\n    const title = () => 'تاریخچه بار';\n    const state = {\n        bordered: true,\n        loading: false,\n        pagination: false,\n        size: 'default',\n        title,\n        showHeader: true,\n        rowSelection: {},\n        scroll: undefined,\n        tableLayout: undefined,\n        top: 'none',\n        bottom: 'bottomRight',\n    };\n\n    \n\n    const allInfo = [];\n\n\n\n    return (\n        <Query query={GET_DRIVER_ORDERS} variables={{\"id\": driver.id}}>\n            {({data, loading, error}) => {\n                if(loading) return <Loading/>;\n                console.log(data);\n\n                {data.driverLoad.map( order => {\n                    allInfo.push(\n                        {\n                            kay: order.id,\n                            orderer: order.owner.user.firstName + \" \" + order.owner.user.lastName,\n                            deliverer: order.driver.user.firstName + \" \" + order.driver.user.lastName,\n                            destAddress: order.destinationAddress,\n                            cost: order.transportationCost\n                        }\n                    );\n                    console.log(allInfo);\n\n                })}\n                return (\n                    <div className=\"order-container\">\n                        <Table\n                            {...state}\n                            columns={columns}\n                            dataSource={allInfo}\n                        />\n                        {/* Error Handling */}\n                        {error && <Error error={error} />}\n                    </div>\n                )\n            }}\n        </Query>\n\n    )\n};\n\nconst GET_DRIVER_ORDERS = gql`\nquery ($id : ID!){\n    driverLoad(id:$id) {\n        id,\n        owner{\n            user{\n                firstName,\n                lastName\n            }\n        },\n        driver{\n            user{\n                firstName,\n                lastName\n            }\n        },\n        destinationAddress,\n        orderCode,\n        transportationCost   \n    }\n}\n`;\n\n\n\n\nexport default (DriverHistory);","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport DriverRegister from './components/user/driver-register';\nimport DriverProfile from './components/user/driver-profile';\nimport CrashReport from './components/vehicle/crash-report';\nimport AddVehicle from './components/vehicle/add-vehicle';\nimport Nav from './components/nav/nav';\nimport DriverHistory from './components/user/driver-history';\nimport {gql} from \"apollo-boost\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from \"./components/shared/Error\";\nimport Loading from \"./components/shared/loading\";\n\n\nexport const UserContext = React.createContext();\n\nconst DriverRoot = ({isLoggedIn, currentUser}) => {\n    console.log(currentUser.id);\n    return(\n        <Query query={DRIVER_QUERY} variables={{\"id\": currentUser.id}}>\n            {({ data , loading, error}) => {\n                if (loading) return <Loading/>;\n\n                const driver = data.driver;\n                return (\n                    <UserContext.Provider value={currentUser}>\n                        <Switch>\n                            <Route exact path=\"/\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} currentUser={currentUser}/>\n                            )}/>\n\n                            <Route exact path=\"/driver/:id/profile/\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<DriverProfile driver={driver}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            {/*<Route exact path=\"/driver/register\" render={() => (*/}\n                                {/*<Nav isLoggedIn={isLoggedIn} content={<DriverRegister driver={driver}/>}*/}\n                                     {/*currentUser={currentUser}/>*/}\n                            {/*)}/>*/}\n\n\n                            <Route exact path=\"/driver/:id/history/\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<DriverHistory driver={driver}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            <Route exact path=\"/driver/:id/crash\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<CrashReport driver={driver}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n\n                            <Route exact path=\"/driver/:id/addVehicle\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<AddVehicle driver={driver}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n                        </Switch>\n                        {error && <Error error={error} />}\n                    </UserContext.Provider>\n                )\n            }}\n        </Query>\n    )\n};\n\n\nconst DRIVER_QUERY = gql`\n    query ($id : ID!){\n        driver (id: $id){\n            user{\n                firstName\n                lastName\n                username\n                password\n                phoneNo\n                email\n            }\n            nationalId\n            birthday\n            rating\n            latitude\n            longitude\n            birthday\n            id\n        }\n    }\n    `;\n\nexport default (DriverRoot);\n","import React, { Component } from 'react'\nimport {\n    Form,\n    Divider, \n    Row, \n    Col,\n    Space,\n    Button,\n    message,\n    Select,\n} from 'antd';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport DriverInfo from '../user/driver-info';\n\nimport './order.css'\n\n\nconst { Option } = Select;\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nexport default class OrderDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: false,\n        }\n    }\n    componentDidMount(){\n        mapboxgl.accessToken = \"pk.eyJ1IjoibW9zdGFmYWdoYWRpbWkiLCJhIjoiY2tiNXM5aDN1MWExMDJvcGE5OWZxZzZzaSJ9.PSVotM-8-Uz6-oAUFIxpRA\";\n\n        var map = new mapboxgl.Map({\n            container: 'map',\n            style: 'mapbox://styles/mapbox/streets-v11',\n            center: [51.388973, 35.689198],\n            zoom: 12\n        });\n    }\n\n    render() {\n        const onFinish = values => {\n            console.log('Received values of form: ', values);\n        };\n\n        const success = () => {\n            message.success('بار با موفقیت تحویل گرفته شد.');\n        };\n\n        return (\n            <div className='order-container'>\n            <Divider>سفارش</Divider>\n            <Form\n                className=\"padding\"\n                name=\"Add Order\"\n                {...formItemLayout}\n                onFinish={onFinish}\n            >\n            <Row>\n            <Col span={15}>\n                \n                <Form.Item label=\"صاحب بار\">\n                    امیرحسن فتحی\n                </Form.Item>\n\n                <Form.Item label=\"آدرس مبدا\">\n                    پاسداران، آشپزخونه حاج ناصر، انبار حاج مهرداد، پلاک ۲۴، اسم رمز سلطان\n                </Form.Item>\n\n                <Form.Item label=\"آدرس مقصد\">\n                    یاخچی‌آباد، چهارراه دخانیات\n                </Form.Item>\n\n                <Form.Item label=\"نام تحویل‌گیرنده\">\n                    امیرهوشنگ اکبری\n                </Form.Item>\n\n                <Form.Item label=\"شماره تحویل‌گیرنده\">\n                    09120727715\n                </Form.Item>\n\n\n                <Form.Item label=\"وزن بار\">\n                    250 کیلوگرم\n                </Form.Item>\n\n                <Form.Item label=\"تاریخ تحویل بار\">\n                    1399/08/25\n                </Form.Item>\n\n                <Form.Item label=\"وضعیت\">\n                    در حال ارسال\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                    <Space>\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={success}>\n                            تایید تحویل بار\n                        </Button>\n                    </Space>\n                </Form.Item>\n                </Col>\n                <Col span={9}>\n                    <div id=\"map\" style={{width:400, height:400}}></div>\n                </Col>\n                </Row>\n            </Form>\n            <Divider>راننده</Divider>\n            {this.state.selected ? \n            <div>\n                <DriverInfo />\n                <br/>\n                <Button className='change-driver-btn' type=\"primary\" onClick={(e) => this.setState({selected: false})}>تغییر راننده</Button>\n            </div>:\n            <div>\n                <Form layout='inline'>\n                    <Form.Item label=\"اختصاص راننده\">\n                        <Select placeholder=\"راننده\">\n                            <Option value=\"1\">امیرحسن فتحی</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item >\n                        <Button type='primary' onClick={(e) => this.setState({selected: true})}>\n                            ثبت\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n            }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { \n    Divider, \n    Form,\n    Input,\n    Avatar,\n    Button,\n} from 'antd';\nimport { KeyOutlined } from '@ant-design/icons';\n\nimport './user.css'\nimport {Query} from \"react-apollo\";\nimport {gql} from \"@apollo/client\";\n\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\n\nconst UserProfile = ({customer}) => {\n    return (\n        <div className=\"user-profile\">\n            <Divider>ویرایش اطلاعات</Divider>\n\n            <Form\n                {...formItemLayout}\n                // style={{width:490}}\n            >\n                <Form.Item label=\"عکس کاربر\">\n                    <Avatar\n                        src={require('../../static/images/avatar.jpeg')}\n                        size={100}\n                    />\n                </Form.Item>\n                <Form.Item label=\"نام\">\n                    <Input value= {customer.user.firstName} disabled/>\n                </Form.Item>\n\n                <Form.Item label=\"نام خانوادگی\">\n                    <Input value= {customer.user.lastName} disabled/>\n                </Form.Item>\n\n                <Form.Item label=\"تاریخ تولد\">\n                    <Input value= {customer.user.birthday} disabled/>\n                </Form.Item>\n\n\n                <Form.Item label=\"شماره تماس\">\n                    <Input value= {customer.user.phoneNo} type=\"tel\" disabled/>\n                </Form.Item>\n\n            </Form>\n        </div>\n    )\n};\n\n\n\nexport default (UserProfile);","import React, { useState } from 'react'\nimport { Table, Button, Modal, Tooltip, Input } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\"\n\n\nimport './user.css'\nimport {Query} from \"react-apollo\";\nimport {gql} from \"apollo-boost\";\n\nconst columns = [\n    {\n      title: 'نام راننده',\n      dataIndex: 'driver',\n    },\n    {\n      title: 'وضعیت',\n      dataIndex: 'status',\n      filters: [\n        {\n          text: 'آزاد',\n          value: 'free',\n        },\n        {\n          text: 'در ماموریت',\n          value: 'on-duty',\n        },\n        {\n          text: 'تصادف کرده',\n          value: 'crashed',\n        },\n\n      ],\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n        title: 'موقعیت جغرافیایی',\n        dataIndex: 'location',\n    },\n    {\n      title: 'تاریخچه',\n      dataIndex: 'history',\n      \n    },\n    {\n      title: 'امتیاز',\n      dataIndex: 'score',\n    },\n];\n\nconst { Search } = Input;\nconst title = () => (\n    <div>\n        <p>\n            لیست راننده‌ها\n        </p>\n        <Search\n            placeholder=\"جست‌وجو در لیست راننده‌ها\" \n            onSearch={value => console.log(value)} \n            enterButton \n            style={{width:400}}\n        />\n    </div>\n);\nconst DriverList = ({customer}) => {\n    const [visible, setVisible] = useState(false);\n    const [visibleHistory, setVisibleHistory] = useState(false);\n\n\n    const state = {\n        bordered: true,\n        loading: false,\n        pagination: false,\n        size: 'default',\n        title,\n        showHeader: true,\n        rowSelection: {},\n        scroll: undefined,\n        tableLayout: undefined,\n        top: 'none',\n        bottom: 'bottomRight',\n    };\n\n\n    const showModal = () => {\n        setVisible(true);\n    };\n\n\n\n    const allInfo = [];\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n\n    return (\n        <Query query={GET_CUSTOMER_DRIVERS} variables={{\"id\": customer.user.id}}>\n        {({data, loading, error}) => {\n            if(loading) return <Loading/>;\n            console.log(data);\n\n            const orderColumns = [\n                {\n                  title: 'مکان سفارش',\n                  dataIndex: 'orderLocation',\n                },\n            ];\n\n            const orderInfo = [];\n\n\n            {data.customerDrivers.map( driver => {\n                {driver.orders.map( order=> {\n                    orderInfo.push({orderLocation: \"(\" + order.latitude+ \", \" + order.longitude + \")\"})\n                })}\n                allInfo.push({\n                    key: driver.id,\n                    driver: driver.user.firstName + \" \" + driver.user.lastName,\n                    status:\n                        <div className=\"driver-status\">\n                            <span>\n                                {driver.driverStatus === \"A_1\" ? \"آزاد\" : driver.driverStatus === \"A_2\" ? \"در ماموریت\" : driver.driverStatus === \"A_3\" ? \"تصادف کرده\" : \"\"}\n                            </span>\n                        </div>,\n                    location: <Button key={driver.id} onClick={showModal}>مشاهده روی نقشه</Button>,\n                    history:\n                        <div>\n                            <Button key={driver.id} onClick={() =>\n                                info(\"نمایش تاریخچه راننده\",\n                                    <Table\n                                    columns={orderColumns}\n                                    dataSource={orderInfo}/>)} >\n                                مشاهده تاریخچه\n                            </Button>\n\n\n\n                        </div>,\n                    score: driver.rating\n                });\n\n            })}\n            return (\n                <div className=\"order-container\">\n                    <Table\n                        {...state}\n                        columns={columns}\n                        dataSource={allInfo}\n                    />\n                    {error && <Error error = {error}/>}\n                </div>\n            )\n        }}\n        </Query>\n    )\n};\n\n\nconst GET_CUSTOMER_DRIVERS = gql`\nquery ($id : ID!){\n    customerDrivers(id:$id) {\n        id,\n        user{\n            firstName,\n            lastName\n        }\n        latitude,\n        longitude,\n        rating,\n        orders{\n          latitude\n          longitude\n        }\n        driverStatus,\n        rating\n    }\n}\n`;\n\nexport default (DriverList);\n// class DedicateLoad extends Component {\n//     render(){\n//         return (\n//             <div>\n//                 اختصاص دادن بار اگه آزاد بود\n//             </div>\n//         )\n//     }\n// }\n\n// class ChangeStatus extends Component {\n//     render() {\n//         return (\n//             <div>\n//                 تغییر وضعیت به تحویل داده اگه تو ماموریت بود! شایدم باید اتوماتیک باشه!\n//             </div>\n//         )\n//     }\n// }","import React, {Component, useState} from 'react'\nimport { Table, Button, Modal } from 'antd';\nimport { CheckCircleTwoTone } from '@ant-design/icons';\nimport OrderDetail from './order-detail';\n\nimport './order.css'\nimport {gql} from \"apollo-boost\";\nimport {Query} from \"react-apollo\";\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\";\n\n\nconst columns = [\n    {\n      title: 'صاحب بار',\n      dataIndex: 'orderer',\n    },\n    {\n      title: 'راننده',\n      dataIndex: 'deliverer',\n    },\n    {\n      title: 'آدرس',\n      dataIndex: 'address',\n      filters: [\n        {\n          text: 'تهران',\n          value: 'Tehran',\n        },\n        {\n          text: 'شیراز',\n          value: 'Shiraz',\n        },\n      ],\n      // TODO: make it work\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n      title: 'وضعیت',\n      dataIndex: 'status',\n        filters: [\n        {\n          text: \"ثبت شده\",\n          value: 'submitted',\n        },\n        {\n          text: \"در حال بارگذاری\" ,\n          value: 'loading',\n        },\n        {\n          text: \"در حال ارسال\",\n          value: 'sending',\n        },\n        {\n          text: \"ارسال شده\",\n          value: 'delivered',\n        },\n\n      ],\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n      title: 'هزینه',\n      dataIndex: 'cost',\n    },\n];\n\nconst OrderList = ({customer}) => {\n    const title = () => 'سفارش‌های ثبت شده';\n\n    const [visible, setVisible] = useState(false);\n\n\n    const state = {\n        visible: false,\n        bordered: true,\n        loading: false,\n        pagination: false,\n        size: 'default',\n        title,\n        showHeader: true,\n        rowSelection: {},\n        scroll: undefined,\n        tableLayout: undefined,\n        top: 'none',\n        bottom: 'bottomRight',\n      };\n\n    \n    const allInfo = [];\n\n\n\n    return (\n        <Query query={GET_CUSTOMER_ORDERS} variables={{\"id\": customer.id}}>\n            {({data, loading, error}) => {\n                if (loading) return <Loading/>;\n\n\n                {\n                    data.customerOrders.map(order => {\n                        allInfo.push(\n                            {\n                                kay: order.id,\n                                orderer: order.owner.user.firstName + \" \" + order.owner.user.lastName,\n                                deliverer: order.driver.user.firstName + \" \" + order.driver.user.lastName,\n                                address: order.destinationAddress,\n                                cost: order.transportationCost,\n                                status: order.orderStatus === \"A_1\" ? \"ثبت شده\" : order.orderStatus === \"A_2\" ? \"در حال بارگذاری\" : order.orderStatus === \"A_3\" ? \"در حال ارسال\":  order.orderStatus === \"A_4\" ? \"ارسال شده\" : \"\",\n                            }\n                        );\n                        console.log(allInfo);\n\n                    })\n                }\n                console.log(allInfo);\n                return (\n                    <div className=\"order-container\">\n                        <Table\n                            {...state}\n                            columns={columns}\n                            dataSource={allInfo}\n                        />\n                        {error && <Error error={error} />}\n                    </div>\n\n                );\n            }}\n        </Query>\n    )\n};\n\nconst GET_CUSTOMER_ORDERS = gql`\nquery ($id : ID!){\n    customerOrders(id : $id) {\n        id,\n        owner{\n            user{\n                firstName,\n                lastName\n            }\n        },\n        driver{\n            user{\n                firstName,\n                lastName\n            }\n        },\n        destinationAddress,\n        orderCode,\n        transportationCost,\n        orderStatus\n    }\n}\n`;\n\n\nexport default (OrderList)\n","import React, {Component, useState} from 'react'\nimport {\n    Form,\n    Input,\n    Button,\n    DatePicker, Modal,\n} from 'antd';\n\nimport './order.css'\nimport {gql} from \"apollo-boost\";\nimport {Mutation} from \"react-apollo\";\nimport Error from \"../shared/Error\";\n\n\nconst formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 14 },\n};\nconst { TextArea } = Input;\n\nconst AddOrder = ({customer}) => {\n    const [sourceAddress, setSourceAddress] = useState(\"\");\n    const [destAddress, setDestAddress] = useState(\"\");\n    const [receiverName, setReceiverName] = useState(\"\");\n    const [phoneNo, setPhoneNo] = useState(\"\");\n    const [visible, setVisible] = useState(false);\n    const [weight, setWeight] = useState(null);\n    const [receiveDate, setReceiveDate] = useState(null);\n    const [extraInfo, setExtraInfo] = useState(\"\");\n\n    const handleSubmit = (event, createOrder, error) => {\n        console.log(\"In the handleSubmit\");\n        event.preventDefault();\n        createOrder();\n        if(!error) {\n            setVisible(true);\n        }\n    };\n\n    function info(message) {\n      Modal.info({\n        title: message,\n        onOk() {},\n      });\n    }\n\n    return (\n        <Mutation\n        mutation={NEW_ORDER_MUTATION}\n        variables={\n            {\n                \"orderData\": {\n                    \"ownerId\" : customer.id,\n                    \"destinationAddress\": destAddress\n                },\n                \"orderCode\" : \"234567\"\n            }\n        }\n\n        onCompleted={() => {\n        info(\"سفارش با موفقیت ثبت شد\")\n        }}\n        >\n        {(createOrder, { loading, error }) => {\n            return (\n                <Form\n                    className=\"order-container padding\"\n                    name=\"Add Order\"\n                    {...formItemLayout}\n                    // onFinish={onFinish}\n                >\n                    <Form.Item label=\"صاحب بار\">\n                        <Input placeholder={customer.user.firstName + \" \" + customer.user.lastName} disabled/>\n                    </Form.Item>\n\n\n                    <Form.Item label=\"آدرس مبدا\">\n                        <Input placeholder=\"آدرس مبدا بارگیری\" type=\"text\"\n                            onChange={event => setSourceAddress(event.target.value)}\n                        />\n                    </Form.Item>\n\n                    <Form.Item label=\"آدرس مقصد\">\n                        <Input placeholder=\"آدرس مقصد تحویل بار\" type=\"text\"\n                            onChange={event => setDestAddress(event.target.value)}\n                        />\n                    </Form.Item>\n\n                    <Form.Item label=\"نام تحویل‌گیرنده\">\n                        <Input placeholder=\"نام تحویل‌گیرنده بار\" type=\"text\"\n                            onChange={event => setReceiverName(event.target.value)}\n                        />\n                    </Form.Item>\n\n                    <Form.Item label=\"شماره تماس\">\n                        <Input placeholder=\"شماره تماس تحویل‌گیرنده بار\" type=\"tel\"\n                        onChange={event => setPhoneNo(event.target.value)}\n                        />\n                    </Form.Item>\n\n\n                    <Form.Item label=\"وزن بار\">\n                        <Input placeholder=\"وزن بار به عدد (کیلوگرم)\" type=\"number\"\n                        onChange={event => setWeight(event.target.value)}\n                        />\n                    </Form.Item>\n\n                    <Form.Item label=\"تاریخ تحویل بار\">\n                        <DatePicker\n                        onChange={date => setReceiveDate(date)}\n                        />\n                    </Form.Item>\n\n                    <Form.Item label=\"توضیحات\">\n                        <TextArea rows={4} placeholder=\"توضیحات را در این قسمت بنویسید...\"\n                        onChange={event => setExtraInfo(event.target.value)}\n                        />\n                    </Form.Item>\n\n\n                    <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n                        <Button type=\"primary\" htmlType=\"submit\"\n                            disabled={\n                            loading ||\n                            !sourceAddress.trim() ||\n                            !destAddress.trim() ||\n                            !receiverName.trim() ||\n                            !weight||\n                            !receiveDate||\n                            !phoneNo.trim()\n                            }\n                            onClick={event => handleSubmit(event, createOrder, error)}\n                        >\n                            {loading ? \"در حال ثبت کردن...\" : \"ثبت سفارش\"}\n                        </Button>\n\n                    </Form.Item>\n                    {error && <Error error={error} />}\n                </Form>\n            )\n        }}\n        </Mutation>\n    )\n};\n\n\n// TODO\nconst NEW_ORDER_MUTATION = gql`\nmutation ($orderCode: String!, $orderData : OrderInput){\n  createOrder(orderCode: $orderCode, orderData: $orderData){\n     order { \n         id\n     }\n  }\n}\n`;\n\nexport default (AddOrder)","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport OrderDetail from './components/order/order-detail';\nimport UserProfile from './components/user/user-profile';\nimport DriverList from './components/user/driver-list';\nimport OrderList from './components/order/order-list';\nimport AddOrder from './components/order/order-add';\n\nimport Nav from './components/nav/nav';\nimport {gql} from \"apollo-boost\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from \"./components/shared/Error\";\nimport Loading from \"./components/shared/loading\";\n\nexport const UserContext = React.createContext();\n\nconst CustomerRoot = ({isLoggedIn, currentUser}) => {\n\n    return(\n        <Query query={CUSTOMER_QUERY} variables={{\"id\": currentUser.id}}>\n            {({ data , loading, error}) => {\n                if (loading) return <Loading/>;\n\n                const customer = data.customer;\n\n                return (\n\n                    <UserContext.Provider value={currentUser}>\n                        <Switch>\n                            <Route exact path=\"/\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} currentUser={currentUser}/>\n                            )}/>\n                            {/* Order */}\n                            <Route exact path=\"/customer/:id/orderList\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<OrderList customer={customer}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            <Route exact path=\"/customer/:id/addOrder\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<AddOrder customer={customer}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            <Route exact path=\"/customer/:id/orderDetail\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<OrderDetail customer={customer}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            <Route exact path=\"/customer/:id/driverList\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<DriverList customer={customer}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n\n                            {/* User */}\n                            <Route exact path=\"/user/:id/profile/\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<UserProfile customer={customer}/>}\n                                     currentUser={currentUser}/>\n                            )}/>\n                        </Switch>\n                        {error && <Error error={error} />}\n                    </UserContext.Provider>\n                )\n            }}\n        </Query>\n    )\n\n};\n\n\nconst CUSTOMER_QUERY = gql`\n    query ($id : ID!){\n        customer (id: $id){\n            user{\n                id\n                firstName\n                lastName\n                username\n                password\n                phoneNo\n                email\n            }\n            id\n        }\n    }\n`;\n\nexport default (CustomerRoot);","import React, {useState} from 'react'\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport {Table, Button, Modal, Tooltip, Input, Form} from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport { Mutation } from \"react-apollo\";\n\nimport './user.css'\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\";\n\n\nconst columns = [\n    {\n      title: 'نام راننده',\n      dataIndex: 'firstName',\n    },\n    {\n      title: 'نام خانوادگی راننده',\n      dataIndex: 'lastName',\n    },\n    {\n        title: 'ایمیل',\n        dataIndex: 'email',\n    },\n    {\n      title: 'نام کاربری',\n      dataIndex: 'username',\n\n    },\n    {\n      title: 'شماره موبایل',\n      dataIndex: 'phoneNo',\n    },\n    {\n      title: 'کد ملی',\n      dataIndex: 'nationalId',\n    },\n    {\n      title: 'تایید و رد',\n      dataIndex: 'verifyRemove',\n    },\n];\n\n\nconst AuthorizeDrivers = ({currentUser}) => {\n    // const [username, setUsername] = useState(\"\");\n    const allInfo = [];\n\n    function info(message) {\n      Modal.info({\n        title: message,\n        onOk() {},\n      });\n    }\n\n    const handleSubmitAuthorize = (event, verifyDriver, id) => {\n                        // console.log(\"In the handleSubmit\");\n                        event.preventDefault();\n                        verifyDriver();\n                        delete allInfo[id];\n                    };\n\n    const handleSubmitDelete = (event, deleteDriver, id) => {\n                        // console.log(\"In the handleSubmit\");\n                        event.preventDefault();\n                        deleteDriver();\n                        delete allInfo[id];\n                    };\n\n    const [visible, setVisible] = useState(false);\n    const [modalConfirmTitle, setModalConfirmTitle] = useState(\"\");\n    const [modalRejectTitle, setModalRejectTitle] = useState(\"\");\n\n    return(\n        <Query query={GET_DRIVERS}>\n            {({data, loading, error}) => {\n                if(loading) return <Loading/>;\n                // if (error) return <div> is error </div>;\n\n                {data.unverifiedDrivers.map( driver => {\n                    // setModalConfirmTitle(\"هویت \".concat(driver.firstName).concat(\" تایید شد\"));\n                    // setModalRejectTitle(driver.firstName.concat(\" رد شد\"));\n\n                    allInfo.push({\n                        key: driver.id,\n                        firstName: driver.user.firstName,\n                        lastName: driver.user.lastName,\n                        username: driver.user.username,\n                        email: driver.user.email,\n                        phoneNo: driver.user.phoneNo,\n                        nationalId: driver.nationalId,\n                        verifyRemove:\n                            <div className=\"driver-status\">\n                                <Mutation mutation={AUTHORIZE_MUTATION}\n                                          variables={\n                                              {\n                                              \"id\" : driver.user.id\n                                              }\n                                          }\n                                          onCompleted={() => {\n                                              info(\"هویت راننده تایید شد\")\n                                          }}\n                                    >{(verifyDriver, authorizeData) => {\n                                        return (\n                                            <div>\n                                                <Button onClick={event => handleSubmitAuthorize(event, verifyDriver, driver.id)} disabled = {authorizeData.loading}>\n                                                    {authorizeData.loading ? \"در حال تایید کردن...\" : \"تایید\"}\n                                                </Button>\n                                                {authorizeData.error && <Error error={authorizeData.error} />}\n                                            </div>\n                                        )\n                                }}\n                                </Mutation>\n                                <Mutation mutation={REMOVE_MUTATION}\n                                          variables={\n                                              {\n                                                  \"id\" : driver.user.id\n                                              }\n                                          }\n                                          onCompleted={() => {\n                                              info(\"هویت راننده رد شد\")\n                                          }}\n                                    >{(deleteDriver, deleteData) => {\n                                        return (\n                                            <div>\n                                                <Button onClick={event => handleSubmitDelete(event, deleteDriver, driver.id)} disabled = {deleteData.loading}>\n                                                    {deleteData.loading ? \"در حال رد کردن...\" : \"رد\"}\n                                                </Button>\n                                                {/* Error Handling */}\n                                                {deleteData.error && <Error error={deleteData.error} />}\n                                            </div>\n                                        )\n                                    }}\n                                </Mutation>\n                            </div>\n\n                    })\n                })}\n\n                return (\n\n                    <div className=\"order-container\">\n\n                        <Table\n\n                            columns={columns}\n                            dataSource={allInfo}\n                            // scroll={this.scroll}\n                        />\n                        {/* Error Handling */}\n                        {error && <Error error={error} />}\n                    </div>\n\n                );\n\n            }}\n        </Query>\n\n    );\n};\n\n\n\n\nconst GET_DRIVERS = gql`\n    {\n    unverifiedDrivers {\n        user{\n            id,\n            firstName,\n            lastName,\n            username,\n            email,\n            phoneNo\n        }\n        nationalId\n    }\n}\n`;\n\n\n// This mutation is supposed to update the Driver Auhtorization state. However, we didn't have it in back. Now we just add new.\nconst AUTHORIZE_MUTATION = gql`\nmutation($id: ID!){\n    verifyDriver (id:$id){\n        driver{\n            id\n        }\n    }\n}\n`;\n\n\nconst REMOVE_MUTATION = gql`\nmutation($id: ID!){\n     deleteDriver (id:$id){\n      id\n    }\n}\n`;\n\nexport default (AuthorizeDrivers);","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport Nav from './components/nav/nav';\nimport AuthorizeDrivers from './components/user/authorizer-drivers'\nimport {gql} from \"apollo-boost\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from \"./components/shared/Error\";\nimport Loading from \"./components/shared/loading\";\n\nexport const UserContext = React.createContext();\n\nconst AuthorizerRoot = ({isLoggedIn, currentUser}) => {\n    return (\n\n        <UserContext.Provider value={currentUser}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (\n                    <Nav isLoggedIn={isLoggedIn} currentUser = {currentUser}/>\n                )}/>\n\n                <Route exact path=\"/authorizer/:id/authorizeDrivers\" render={() => (\n                    <Nav isLoggedIn={isLoggedIn} content={<AuthorizeDrivers currentUser = {currentUser}/>} currentUser = {currentUser}/>\n                )}/>\n            </Switch>\n        </UserContext.Provider>\n    );\n};\n\n\nexport default (AuthorizerRoot);","import React, {Component, useState} from 'react'\nimport {\n    Divider,\n    Form,\n    Input,\n    Button, Modal, Col, Rate, Card, Row, DatePicker, Upload,\n} from 'antd';\nimport {KeyOutlined, UploadOutlined} from '@ant-design/icons';\n\nimport '../user/user.css'\nimport {gql} from \"@apollo/client\";\nimport {Mutation, Query} from \"react-apollo\";\nimport Error from \"../shared/Error\";\nimport moment from 'moment';\n\nconst editItemLayout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 10 },\n};\n\n\n\nconst EditDriver = ({driver, visible, setVisible}) => {\n    const [username, setUsername] = useState(driver.user.username);\n    const [usernameState, setUsernameState] = useState(true);\n    const [email, setEmail] = useState(driver.user.email);\n    const [emailState, setEmailState] = useState(true);\n    const [password, setPassword] = useState(driver.user.password);\n    const [passwordState, setPasswordState] = useState(true);\n    const [firstName, setFirstName] = useState(driver.user.firstName);\n    const [firstNameState, setFirstNameState] = useState(true);\n    const [lastName, setLastName] = useState(driver.user.lastName);\n    const [lastNameState, setLastNameState] = useState(true);\n    const [nationalId, setNationalId] = useState(driver.nationalID);\n    const [NationalIdState, setNationalIdState] = useState(true);\n    const [birthDay, setBirthDay] = useState(driver.birthday);\n    const [phoneNo, setPhoneNo] = useState(driver.user.phoneNo);\n    const [phoneNoState, setPhoneNoState] = useState(true);\n    // const [image, setImage] = useState(driver.profilePicture);\n\n\n\n    const handleSubmit = async (event, updateDriver) => {\n        console.log(\"In the handleSubmit\");\n        event.preventDefault();\n        updateDriver();\n        setVisible(false);\n    };\n\n\n\n    // const normFile = e => {\n    //     console.log('Upload event:', e.file);\n    //     setImage(e.file);\n    //     if (Array.isArray(e)) {\n    //         return e;\n    //     }\n    //     return e && e.fileList;\n    // };\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n    return (\n        <Mutation\n            mutation={UPDATE_DRIVER}\n            variables={\n                {\n                    \"driverData\": {\n                        \"user\": {\n                            \"firstName\": firstName,\n                            \"lastName\": lastName,\n                            \"username\": username,\n                            \"email\": email,\n                            \"phoneNo\": phoneNo,\n                            \"password\": password\n                        },\n                        \"nationalId\": nationalId,\n                        \"birthday\": birthDay,\n                    },\n                    \"id\" : driver.id\n                }\n            }\n        >\n            {(updateDriver, {loading, error}) => {\n                return (\n                   <Modal\n                        title = \"ویرایش راننده\"\n                        visible={visible}\n                        onOk = {event => handleSubmit(event, updateDriver)}\n                        onCancel = {() => setVisible(false)}\n                        okButtonProps = {{\n                            disabled:\n                            loading ||\n                            !firstNameState ||\n                            !lastNameState ||\n                            !usernameState ||\n                            !NationalIdState ||\n                            !emailState ||\n                            !passwordState ||\n                            !phoneNoState\n                        }}\n                        okText={loading ? \"در حال ویرایش...\" : \"ویرایش\"}\n                        cancelText=\"لغو\"\n                        >\n\n                            <Form\n                                name=\"edit driver\"\n                                {...editItemLayout}\n                                onComplete = {\n                                    () => info(\"اطلاعات با موفیقت تغییر کرد!\", \"\")\n                                }\n\n                            >\n                                <Form.Item label=\"نام\">\n                                <Input\n                                    id = \"name\"\n                                    onChange={event => {\n                                        setFirstName(event.target.value);\n                                        setFirstNameState(!!firstName);\n                                    }}\n                                    defaultValue={driver.user.firstName}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام خانوادگی\">\n                                    <Input\n                                        id = \"familyName\"\n                                        onChange={event => {\n                                                setLastName(event.target.value);\n                                                setLastNameState(!!firstName);\n                                            }\n                                        }\n                                        defaultValue={driver.user.lastName}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام کاربری\">\n                                    <Input\n                                        id = \"username\"\n                                        onChange={event => {\n                                                setUsername(event.target.value);\n                                                setUsernameState(!!username);\n                                            }\n                                        }\n                                        defaultValue={driver.user.username}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"رمز عبور\">\n                                    <Input\n                                        id = \"password\"\n                                        onChange={event => {\n                                                setPassword(event.target.value);\n                                                setPasswordState(!!password);\n                                            }}\n                                      />\n                                </Form.Item>\n\n                                <Form.Item label=\"ایمیل\" >\n                                    <Input\n                                        id = \"email\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,}$\") != null){\n                                                setEmail(event.target.value);\n                                                setEmailState(true);\n                                                document.getElementById(\"email\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setEmailState(false);\n                                                document.getElementById(\"email\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        defaultValue={driver.user.email}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"شماره تماس\">\n                                    <Input\n                                        id = \"phoneNumber\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[0-9]{8,11}$\") != null){\n                                                setPhoneNo(event.target.value);\n                                                setPhoneNoState(true);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setPhoneNoState(false);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        defaultValue={driver.user.phoneNo}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"کد ملی\">\n                                    <Input\n                                        id = \"nationalId\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[0-9]{10}$\") != null){\n                                                setNationalId(event.target.value);\n                                                setNationalIdState(true);\n                                                document.getElementById(\"nationalId\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                document.getElementById(\"nationalId\").style.backgroundColor = 'pink';\n                                                setNationalIdState(false);\n                                            }\n                                        }}\n                                        defaultValue={driver.nationalId}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"تاریخ تولد\">\n                                    <DatePicker id = \"birthDay\" onChange=\n                                        {date => {\n                                                setBirthDay(date);\n                                            }\n                                        }\n                                        defaultValue={birthDay? moment(birthDay, \"YYYY-MM-DD\") : \"\"}\n                                    />\n                                </Form.Item>\n\n\n                            <Form.Item label=\"امتیاز\">\n                                <Rate disabled defaultValue={driver.rating} />\n                            </Form.Item>\n\n\n                            {/*<Form.Item*/}\n                                {/*name=\"عکس پرسنلی\"*/}\n                                {/*label=\"عکس پرسنلی\"*/}\n                                {/*valuePropName=\"fileList\"*/}\n                                {/*getValueFromEvent={normFile}*/}\n                            {/*>*/}\n                                {/*<Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">*/}\n                                {/*<Button>*/}\n                                    {/*<UploadOutlined /> عکس خود را انتخاب کنید*/}\n                                {/*</Button>*/}\n                                {/*</Upload>*/}\n                            {/*</Form.Item>*/}\n                                {error && <Error error = {error}/>}\n                            </Form>\n\n                   </Modal>\n          )\n        }}\n    </Mutation>\n  );\n};\n\n\nexport default (EditDriver);\n\nconst UPDATE_DRIVER = gql`\n  mutation ($id : ID!, $driverData: DriverInput!) {\n  updateDriver(id: $id, driverData: $driverData) {\n    driver{\n       user{\n        firstName\n        lastName\n       }\n    }\n  }\n}\n`;\n","import React, {Component, useState} from 'react'\nimport {\n    Divider,\n    Form,\n    Input,\n    Button, Modal, Col, Rate, Card, Row, DatePicker, Upload,\n} from 'antd';\nimport {KeyOutlined, UploadOutlined} from '@ant-design/icons';\n\nimport '../user/user.css'\nimport {gql} from \"@apollo/client\";\nimport {Mutation, Query} from \"react-apollo\";\nimport Error from \"../shared/Error\";\nimport moment from 'moment';\n\nconst editItemLayout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 10 },\n};\n\n\n\nconst EditDriver = ({visible, setVisible}) => {\n    const [username, setUsername] = useState(\"\");\n    const [usernameState, setUsernameState] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [emailState, setEmailState] = useState(false);\n    const [password, setPassword] = useState(\"\");\n    const [passwordState, setPasswordState] = useState(false);\n    const [firstName, setFirstName] = useState(\"\");\n    const [firstNameState, setFirstNameState] = useState(false);\n    const [lastName, setLastName] = useState(\"\");\n    const [lastNameState, setLastNameState] = useState(false);\n    const [nationalId, setNationalId] = useState(\"\");\n    const [NationalIdState, setNationalIdState] = useState(false);\n    const [birthDay, setBirthDay] = useState(\"\");\n    const [phoneNo, setPhoneNo] = useState(\"\");\n    const [phoneNoState, setPhoneNoState] = useState(false);\n    // const [image, setImage] = useState(driver.profilePicture);\n\n\n\n    const handleSubmit = async (event, createDriver) => {\n        console.log(\"In the handleSubmit\");\n        event.preventDefault();\n        createDriver();\n        setVisible(false);\n    };\n\n\n\n    // const normFile = e => {\n    //     console.log('Upload event:', e.file);\n    //     setImage(e.file);\n    //     if (Array.isArray(e)) {\n    //         return e;\n    //     }\n    //     return e && e.fileList;\n    // };\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n    return (\n        <Mutation\n            mutation={ADD_DRIVER}\n            variables={\n                {\n                    \"driverData\": {\n                        \"user\": {\n                            \"firstName\": firstName,\n                            \"lastName\": lastName,\n                            \"username\": username,\n                            \"email\": email,\n                            \"phoneNo\": phoneNo,\n                            \"password\": password\n                        },\n                        \"nationalId\": nationalId,\n                        \"birthday\": birthDay,\n                    }\n                }\n            }\n        >\n            {(createDriver, {loading, error}) => {\n                return (\n                   <Modal\n                        title = \"ویرایش راننده\"\n                        visible={visible}\n                        onOk = {event => handleSubmit(event, createDriver)}\n                        onCancel = {() => setVisible(false)}\n                        okButtonProps = {{\n                            disabled:\n                            loading ||\n                            !firstNameState ||\n                            !lastNameState ||\n                            !usernameState ||\n                            !NationalIdState ||\n                            !emailState ||\n                            !passwordState ||\n                            !phoneNoState\n                        }}\n                        okText={loading ? \"در حال ویرایش...\" : \"ویرایش\"}\n                        cancelText=\"لغو\"\n                        >\n\n                            <Form\n                                name=\"edit driver\"\n                                {...editItemLayout}\n                                onComplete = {\n                                    () => info(\"اطلاعات با موفیقت تغییر کرد!\", \"\")\n                                }\n\n                            >\n                                <Form.Item label=\"نام\">\n                                <Input\n                                    id = \"name\"\n                                    onChange={event => {\n                                        setFirstName(event.target.value);\n                                        setFirstNameState(!!firstName);\n                                    }}\n                                    placeholder={\"امیرحسین\"}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام خانوادگی\">\n                                    <Input\n                                        id = \"familyName\"\n                                        onChange={event => {\n                                                setLastName(event.target.value);\n                                                setLastNameState(!!firstName);\n                                            }\n                                        }\n                                        placeholder={\"پوسا\"}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام کاربری\">\n                                    <Input\n                                        id = \"username\"\n                                        onChange={event => {\n                                                setUsername(event.target.value);\n                                                setUsernameState(!!username);\n                                            }\n                                        }\n                                        />\n                                </Form.Item>\n\n                                <Form.Item label=\"رمز عبور\">\n                                    <Input\n                                        id = \"password\"\n                                        onChange={event => {\n                                                setPassword(event.target.value);\n                                                setPasswordState(!!password);\n                                            }}\n                                      />\n                                </Form.Item>\n\n                                <Form.Item label=\"ایمیل\" >\n                                    <Input\n                                        id = \"email\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,}$\") != null){\n                                                setEmail(event.target.value);\n                                                setEmailState(true);\n                                                document.getElementById(\"email\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setEmailState(false);\n                                                document.getElementById(\"email\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        placeholder={\"poosa@gmail.com\"}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"شماره تماس\">\n                                    <Input\n                                        id = \"phoneNumber\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[0-9]{8,11}$\") != null){\n                                                setPhoneNo(event.target.value);\n                                                setPhoneNoState(true);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setPhoneNoState(false);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        placeholder={\"0912xxxxxxx\"}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"کد ملی\">\n                                    <Input\n                                        id = \"nationalId\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[0-9]{10}$\") != null){\n                                                setNationalId(event.target.value);\n                                                setNationalIdState(true);\n                                                document.getElementById(\"nationalId\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                document.getElementById(\"nationalId\").style.backgroundColor = 'pink';\n                                                setNationalIdState(false);\n                                            }\n                                        }}\n                                        placeholder={\"0020123456\"}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"تاریخ تولد\">\n                                    <DatePicker id = \"birthDay\" onChange=\n                                        {date => {\n                                                setBirthDay(date);\n                                            }\n                                        }\n                                    />\n                                </Form.Item>\n\n\n                            <Form.Item label=\"امتیاز\">\n                                <Rate disabled defaultValue = {3} />\n                            </Form.Item>\n\n\n                            {/*<Form.Item*/}\n                                {/*name=\"عکس پرسنلی\"*/}\n                                {/*label=\"عکس پرسنلی\"*/}\n                                {/*valuePropName=\"fileList\"*/}\n                                {/*getValueFromEvent={normFile}*/}\n                            {/*>*/}\n                                {/*<Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">*/}\n                                {/*<Button>*/}\n                                    {/*<UploadOutlined /> عکس خود را انتخاب کنید*/}\n                                {/*</Button>*/}\n                                {/*</Upload>*/}\n                            {/*</Form.Item>*/}\n                                {error && <Error error = {error}/>}\n                            </Form>\n\n                   </Modal>\n          )\n        }}\n    </Mutation>\n  );\n};\n\n\nexport default (EditDriver);\n\nconst ADD_DRIVER = gql`\n  mutation ($driverData: DriverInput!) {\n  createDriver(driverData: $driverData) {\n    driver{\n       user{\n        firstName\n        lastName\n       }\n    }\n  }\n}\n`;\n","import React, { useState } from 'react'\nimport { Table, Button, Modal, Tooltip, Input } from 'antd';\nimport {EditOutlined, KeyOutlined, UserOutlined, MinusOutlined} from '@ant-design/icons';\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\"\n\n\nimport '../user/user.css'\nimport {Mutation, Query} from \"react-apollo\";\nimport {gql} from \"apollo-boost\";\nimport {UserType} from \"../shared/user-type-enum\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from \"../../admin-root\";\nimport EditDriver from \"./edit-driver\";\nimport AddDriver from \"./add-driver\";\n\n\n\nexport const UserContext = React.createContext();\n\nconst columns = [\n    {\n      title: 'نام',\n      dataIndex: 'firstName',\n    },\n    {\n      title: 'نام خانوادگی',\n      dataIndex: 'lastName',\n    },\n    {\n      title: 'وضعیت',\n      dataIndex: 'status',\n      filters: [\n        {\n          text: 'آزاد',\n          value: 'free',\n        },\n        {\n          text: 'در ماموریت',\n          value: 'on-duty',\n        },\n        {\n          text: 'تصادف کرده',\n          value: 'crashed',\n        },\n\n      ],\n      onFilter: (value, record) => record.address.indexOf(value) === 0,\n    },\n    {\n        title: 'موقعیت جغرافیایی',\n        dataIndex: 'location',\n    },\n    {\n      title: 'تاریخچه',\n      dataIndex: 'history',\n\n    },\n    {\n      title: 'امتیاز',\n      dataIndex: 'score',\n    },\n    {\n      title: 'ویرایش / پاک کردن',\n      dataIndex: 'editDelete',\n    }\n];\n\nconst { Search } = Input;\n\n\nconst AllDriversList = ({customer}) => {\n    const [visibleHistory, setVisibleHistory] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleAdd, setVisibleAdd] = useState(false);\n    const [driverClone, setDriverClone] = useState(null);\n\n    const title = () => (\n    <div>\n        <p>\n            لیست راننده‌ها\n        </p>\n        <Search\n            placeholder=\"جست‌وجو در لیست راننده‌ها\"\n            onSearch={value => console.log(value)}\n            enterButton\n            style={{width:400}}\n        />\n\n        <Button type=\"primary\" size=\"large\" style = {{position: 'absolute', up:2, left:1}}>\n            اضافه کردن\n        </Button>\n\n        <AddDriver visible = {visibleAdd} setVisible = {setVisibleAdd}/>\n    </div>\n);\n\n\n    const state = {\n        bordered: true,\n        loading: false,\n        pagination: false,\n        size: 'default',\n        title,\n        showHeader: true,\n        rowSelection: {},\n        scroll: undefined,\n        tableLayout: undefined,\n        top: 'none',\n        bottom: 'bottomRight',\n    };\n\n\n    const handleEdit = (driver) => {\n        console.log(driver);\n        setDriverClone(driver);\n        setVisibleEdit(true);\n    };\n\n    const handleDelete = (event, deleteDriver) => {\n        event.preventDefault();\n        deleteDriver();\n    };\n\n\n\n    const allInfo = [];\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n\n    return (\n\n        <Query query={GET_ALL_DRIVERS}>\n        {({data, loading, error}) => {\n            if(loading) return <Loading/>;\n            console.log(data);\n\n            const orderColumns = [\n                {\n                  title: 'مکان سفارش',\n                  dataIndex: 'orderLocation',\n                },\n            ];\n\n            const orderInfo = [];\n\n\n            {data.allDrivers.map( driver => {\n                {driver.orders.map( order=> {\n                    orderInfo.push({orderLocation: \"(\" + order.latitude+ \", \" + order.longitude + \")\"})\n                })}\n                allInfo.push({\n                    key: driver.id,\n                    firstName:\n                        driver.user.firstName,\n                    lastName:\n                        driver.user.lastName,\n                    status:\n                        <div className=\"driver-status\">\n                            <span>\n                                {driver.driverStatus === \"A_1\" ? \"آزاد\" : driver.driverStatus === \"A_2\" ? \"در ماموریت\" : driver.driverStatus === \"A_3\" ? \"تصادف کرده\" : \"\"}\n                            </span>\n                        </div>,\n                    location: <Button key={4*driver.id} >مشاهده روی نقشه</Button>,\n                    history:\n                        <div>\n                            <Button key={4*driver.id + 1} onClick={() =>\n                                info(\"نمایش تاریخچه راننده\",\n                                    <Table\n                                    columns={orderColumns}\n                                    dataSource={orderInfo}/>)} >\n                                مشاهده تاریخچه\n                            </Button>\n                        </div>,\n                    score: driver.rating,\n                    editDelete:\n                    <div>\n                        <Tooltip placement=\"top\" title='ویرایش'>\n\n                            <Button key={4* driver.id + 2} shape=\"circle\" onClick={() => handleEdit(driver)}>\n                                <EditOutlined />\n                            </Button>\n\n                        </Tooltip>\n                        <Mutation mutation={REMOVE_MUTATION}\n                          variables={\n                              {\n                                  \"id\" : driver.user.id\n                              }\n                          }\n                          onCompleted={() => {\n                              info(\"راننده با موفقیت حذف شد\")\n                          }}\n                        >{(deleteDriver, deleteData) => {\n                            return (\n\n                                <Tooltip placement=\"top\" title= {deleteData.loading ? \"در حال پاک کردن...\" : \"پاک کردن\"}>\n                                    <Button key={4* driver.id + 3} shape=\"circle\" onClick={event => handleDelete(event, deleteDriver)} disabled = {deleteData.loading}>\n                                        <MinusOutlined />\n                                    </Button>\n                                    {deleteData.error && <Error error={deleteData.error} />}\n                                </Tooltip>\n                            )\n                        }}\n                        </Mutation>\n                    </div>\n\n                });\n\n            })}\n            return (\n                <div className=\"order-container\">\n\n\n\n                    <Table\n                        {...state}\n                        columns={columns}\n                        dataSource={allInfo}\n                    />\n                    {error && <Error error = {error}/>}\n                    {driverClone && <EditDriver driver = {driverClone} visible = {visibleEdit} setVisible = {setVisibleEdit}/>}\n                </div>\n            )\n        }}\n        </Query>\n    )\n};\n\n\nconst GET_ALL_DRIVERS = gql`\n{\n    allDrivers {\n        id\n        user{\n            id\n            firstName\n            lastName\n            username\n            password\n            email\n            phoneNo\n        }\n        latitude\n        longitude\n        rating\n        driverStatus\n        rating\n        profilePicture\n        birthday\n        nationalId\n        orders{\n          latitude\n          longitude\n        }\n    }\n}\n`;\n\n\n\nconst REMOVE_MUTATION = gql`\nmutation($id: ID!){\n     deleteDriver (id:$id){\n      id\n    }\n}\n`;\n\nexport default (AllDriversList);","import React, {Component, useState} from 'react'\nimport {\n    Divider,\n    Form,\n    Input,\n    Button, Modal, Col, Rate, Card, Row, DatePicker, Upload,\n} from 'antd';\nimport {KeyOutlined, UploadOutlined} from '@ant-design/icons';\n\nimport '../user/user.css'\nimport {gql} from \"@apollo/client\";\nimport {Mutation, Query} from \"react-apollo\";\nimport Error from \"../shared/Error\";\nimport moment from 'moment';\n\nconst editItemLayout = {\n    labelCol: { span: 5 },\n    wrapperCol: { span: 10 },\n};\n\n\n\nconst EditCustomer = ({customer, visible, setVisible}) => {\n    const [username, setUsername] = useState(customer.user.username);\n    const [usernameState, setUsernameState] = useState(true);\n    const [email, setEmail] = useState(customer.user.email);\n    const [emailState, setEmailState] = useState(true);\n    const [password, setPassword] = useState(customer.user.password);\n    const [passwordState, setPasswordState] = useState(true);\n    const [firstName, setFirstName] = useState(customer.user.firstName);\n    const [firstNameState, setFirstNameState] = useState(true);\n    const [lastName, setLastName] = useState(customer.user.lastName);\n    const [lastNameState, setLastNameState] = useState(true);\n    const [birthDay, setBirthDay] = useState(customer.birthday);\n    const [phoneNo, setPhoneNo] = useState(customer.user.phoneNo);\n    const [phoneNoState, setPhoneNoState] = useState(true);\n\n\n\n    const handleSubmit = async (event, updateCustomer) => {\n        console.log(\"In the handleSubmit\");\n        event.preventDefault();\n        updateCustomer();\n        setVisible(false);\n    };\n\n\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n    return (\n        <Mutation\n            mutation={UPDATE_DRIVER}\n            variables={\n                {\n                    \"customerData\": {\n                        \"user\": {\n                            \"firstName\": firstName,\n                            \"lastName\": lastName,\n                            \"username\": username,\n                            \"email\": email,\n                            \"phoneNo\": phoneNo,\n                            \"password\": password\n                        },\n                        \"birthday\": birthDay,\n                    }\n                }\n            }\n        >\n            {(updateCustomer, {loading, error}) => {\n                return (\n                   <Modal\n                        title = \"ویرایش راننده\"\n                        visible={visible}\n                        onOk = {event => handleSubmit(event, updateCustomer)}\n                        onCancel = {() => setVisible(false)}\n                        okButtonProps = {{\n                            disabled:\n                            loading ||\n                            !firstNameState ||\n                            !lastNameState ||\n                            !usernameState ||\n                            !emailState ||\n                            !passwordState ||\n                            !phoneNoState\n                        }}\n                        okText={loading ? \"در حال ویرایش...\" : \"ویرایش\"}\n                        cancelText=\"لغو\"\n                        >\n\n                            <Form\n                                name=\"edit customer\"\n                                {...editItemLayout}\n                                onComplete = {\n                                    () => info(\"اطلاعات با موفیقت تغییر کرد!\", \"\")\n                                }\n\n                            >\n                                <Form.Item label=\"نام\">\n                                <Input\n                                    id = \"name\"\n                                    onChange={event => {\n                                        setFirstName(event.target.value);\n                                        setFirstNameState(!!firstName);\n                                    }}\n                                    defaultValue={customer.user.firstName}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام خانوادگی\">\n                                    <Input\n                                        id = \"familyName\"\n                                        onChange={event => {\n                                                setLastName(event.target.value);\n                                                setLastNameState(!!firstName);\n                                            }\n                                        }\n                                        defaultValue={customer.user.lastName}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"نام کاربری\">\n                                    <Input\n                                        id = \"username\"\n                                        onChange={event => {\n                                                setUsername(event.target.value);\n                                                setUsernameState(!!username);\n                                            }\n                                        }\n                                        defaultValue={customer.user.username}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"رمز عبور\">\n                                    <Input\n                                        id = \"password\"\n                                        onChange={event => {\n                                                setPassword(event.target.value);\n                                                setPasswordState(!!password);\n                                            }}\n                                      />\n                                </Form.Item>\n\n                                <Form.Item label=\"ایمیل\" >\n                                    <Input\n                                        id = \"email\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+[.][A-Za-z]{2,}$\") != null){\n                                                setEmail(event.target.value);\n                                                setEmailState(true);\n                                                document.getElementById(\"email\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setEmailState(false);\n                                                document.getElementById(\"email\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        defaultValue={customer.user.email}/>\n                                </Form.Item>\n\n                                <Form.Item label=\"شماره تماس\">\n                                    <Input\n                                        id = \"phoneNumber\"\n                                        onChange={event => {\n                                            if(event.target.value.match(\"^[0-9]{8,11}$\") != null){\n                                                setPhoneNo(event.target.value);\n                                                setPhoneNoState(true);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'white';\n                                            }\n                                            else {\n                                                setPhoneNoState(false);\n                                                document.getElementById(\"phoneNumber\").style.backgroundColor = 'pink';\n                                            }\n                                        }}\n                                        defaultValue={customer.user.phoneNo}/>\n                                </Form.Item>\n\n\n                                <Form.Item label=\"تاریخ تولد\">\n                                    <DatePicker id = \"birthDay\" onChange=\n                                        {date => {\n                                                setBirthDay(date);\n                                            }\n                                        }\n                                        defaultValue={birthDay? moment(birthDay, \"YYYY-MM-DD\") : \"\"}\n                                    />\n                                </Form.Item>\n                                {error && <Error error = {error}/>}\n                            </Form>\n\n                   </Modal>\n          )\n        }}\n    </Mutation>\n  );\n};\n\n\nexport default (EditCustomer);\n\nconst UPDATE_DRIVER = gql`\n  mutation ($id : ID!, $customerData: CustomerInput!) {\n  updateCustomer(id: $id, customerData: $customerData) {\n    customer{\n       user{\n        firstName\n        lastName\n       }\n    }\n  }\n}\n`;\n","import React, { useState } from 'react'\nimport { Table, Button, Modal, Tooltip, Input } from 'antd';\nimport {EditOutlined, KeyOutlined, UserOutlined, MinusOutlined} from '@ant-design/icons';\nimport Error from \"../shared/Error\";\nimport Loading from \"../shared/loading\"\n\n\nimport '../user/user.css'\nimport {Mutation, Query} from \"react-apollo\";\nimport {gql} from \"apollo-boost\";\nimport {UserType} from \"../shared/user-type-enum\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Nav from \"../../admin-root\";\nimport EditCustomer from \"./edit-customer\"\n\n\nexport const UserContext = React.createContext();\n\nconst columns = [\n    {\n      title: 'نام',\n      dataIndex: 'firstName',\n    },\n    {\n      title: 'نام خانوادگی',\n      dataIndex: 'lastName',\n    },\n    {\n      title: 'تاریخچه',\n      dataIndex: 'history',\n\n    },\n    {\n      title: 'تاریخ تولد',\n      dataIndex: 'birthday',\n    },\n    {\n      title: 'ویرایش / پاک کردن',\n      dataIndex: 'editDelete',\n    }\n];\n\nconst { Search } = Input;\nconst title = () => (\n    <div>\n        <p>\n            لیست راننده‌ها\n        </p>\n        <Search\n            placeholder=\"جست‌وجو در لیست راننده‌ها\"\n            onSearch={value => console.log(value)}\n            enterButton\n            style={{width:400}}\n        />\n    </div>\n);\n\n\nconst AllCustomersList = ({customer}) => {\n    const [visibleHistory, setVisibleHistory] = useState(false);\n    const [visibleEdit, setVisibleEdit] = useState(false);\n    const [visibleDelete, setVisibleDelete] = useState(false);\n    const [customerClone, setCustomerClone] = useState(null);\n\n    const state = {\n        bordered: true,\n        loading: false,\n        pagination: false,\n        size: 'default',\n        title,\n        showHeader: true,\n        rowSelection: {},\n        scroll: undefined,\n        tableLayout: undefined,\n        top: 'none',\n        bottom: 'bottomRight',\n    };\n\n\n    const handleEdit = (customer) => {\n        console.log(customer);\n        setCustomerClone(customer);\n        setVisibleEdit(true);\n    };\n\n    const handleDelete = (event, deleteCustomer) => {\n        event.preventDefault();\n        deleteCustomer();\n    };\n\n\n\n    const allInfo = [];\n\n    function info(message, content) {\n      Modal.info({\n        title: message,\n        content: content,\n        onOk() {},\n      });\n    }\n\n\n    return (\n\n        <Query query={GET_ALL_CUSTOMERS}>\n        {({data, loading, error}) => {\n            if(loading) return <Loading/>;\n            console.log(data);\n\n            const orderColumns = [\n                {\n                  title: 'مکان سفارش',\n                  dataIndex: 'orderLocation',\n                },\n            ];\n\n            const orderInfo = [];\n\n\n            {data.allCustomers.map( customer => {\n                {customer.orders.map( order=> {\n                    orderInfo.push({orderLocation: \"(\" + order.latitude+ \", \" + order.longitude + \")\"})\n                })}\n                allInfo.push({\n                    key: customer.id,\n                    firstName:\n                        customer.user.firstName,\n                    lastName:\n                        customer.user.lastName,\n                    birthday:\n                        customer.birthday,\n                    location: <Button key={4*customer.id} >مشاهده روی نقشه</Button>,\n                    history:\n                        <div>\n                            <Button key={4*customer.id + 1} onClick={() =>\n                                info(\"نمایش تاریخچه راننده\",\n                                    <Table\n                                    columns={orderColumns}\n                                    dataSource={orderInfo}/>)} >\n                                مشاهده تاریخچه\n                            </Button>\n                        </div>,\n                    editDelete:\n                    <div>\n                        <Tooltip placement=\"top\" title='ویرایش'>\n\n                            <Button key={4* customer.id + 2} shape=\"circle\" onClick={() => handleEdit(customer)}>\n                                <EditOutlined />\n                            </Button>\n\n                        </Tooltip>\n                        <Mutation mutation={REMOVE_MUTATION}\n                          variables={\n                              {\n                                  \"id\" : customer.id\n                              }\n                          }\n                          onCompleted={() => {\n                              info(\"مشتری با موفقیت حذف شد\")\n                          }}\n                        >{(deleteCustomer, deleteData) => {\n                            return (\n\n                                <Tooltip placement=\"top\" title= {deleteData.loading ? \"در حال پاک کردن...\" : \"پاک کردن\"}>\n                                    <Button key={4* customer.id + 3} shape=\"circle\" onClick={event => handleDelete(event, deleteCustomer)} disabled = {deleteData.loading}>\n                                        <MinusOutlined />\n                                    </Button>\n                                    {deleteData.error && <Error error={deleteData.error} />}\n                                </Tooltip>\n                            )\n                        }}\n                        </Mutation>\n                    </div>\n\n                });\n\n            })}\n            return (\n                <div className=\"order-container\">\n\n\n\n                    <Table\n                        {...state}\n                        columns={columns}\n                        dataSource={allInfo}\n                    />\n                    {error && <Error error = {error}/>}\n                    {customerClone && <EditCustomer customer = {customerClone} visible = {visibleEdit} setVisible = {setVisibleEdit}/>}\n                </div>\n            )\n        }}\n        </Query>\n    )\n};\n\n\nconst GET_ALL_CUSTOMERS = gql`\n{\n    allCustomers {\n        id\n        user{\n            id\n            firstName\n            lastName\n            username\n            password\n            email\n            phoneNo\n        }\n        birthday\n        orders {\n            longitude\n            latitude\n        }\n    }\n}\n`;\n\n\n\nconst REMOVE_MUTATION = gql`\nmutation($id : ID!){\n    deleteCustomer (id : $id){\n      id\n    }\n}\n`;\n\nexport default (AllCustomersList);","import React from \"react\";\nimport {Query} from \"react-apollo\";\nimport Nav from './components/nav/nav';\nimport {gql} from \"apollo-boost\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from \"./components/shared/Error\";\nimport AllDriversList from \"./components/admin/all-driver-list\"\nimport AllCustomersList from \"./components/admin/all-customers-list\"\n\n\nexport const UserContext = React.createContext();\n\nconst AdminRoot = ({isLoggedIn, currentUser}) => {\n    return (\n        <UserContext.Provider value={currentUser}>\n            <Switch>\n                <Route exact path=\"/\" render={() => (\n                    <Nav isLoggedIn={isLoggedIn} currentUser = {currentUser}/>\n                )}/>\n\n                <Route exact path=\"/admin/allDriversList\" render={() => (\n                    <Nav isLoggedIn={isLoggedIn} content={<AllDriversList/>} currentUser = {currentUser}/>\n                )}/>\n\n                <Route exact path=\"/admin/allCustomersList\" render={() => (\n                    <Nav isLoggedIn={isLoggedIn} content={<AllCustomersList/>} currentUser = {currentUser}/>\n                )}/>\n\n            </Switch>\n        </UserContext.Provider>\n    );\n};\n\nconst ME_QUERY = gql`\n    {\n        me{\n            id\n\n        }\n    }\n`;\n\nexport default (AdminRoot );","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ConfigProvider } from 'antd';\nimport fa_IR from 'antd/es/locale/fa_IR'\n\nimport * as serviceWorker from './serviceWorker';\nimport {UserType} from './components/shared/user-type-enum';\n\nimport \"antd/dist/antd.css\";\nimport './static/css/normalizer.css'\nimport Nav from './components/nav/nav';\nimport Error from \"./components/shared/Error\";\nimport Install from \"./components/shared/install\";\nimport Loading from \"./components/shared/loading\";\nimport DriverRoot from './driver-root';\nimport CustomerRoot from './customer-root';\nimport AuthorizerRoot from './authorizer-root';\nimport AdminRoot from './admin-root';\nimport { ApolloProvider, Query } from \"react-apollo\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport DriverRegister from './components/user/driver-register';\n\n\n\n\nconst client = new ApolloClient({\n    uri: \"http://localhost:8000/graphql\",\n    fetchOptions: {\n        credentials: \"include\"\n    },\n    request: operation => {\n        const token = localStorage.getItem(\"authToken\") || \"\";\n        operation.setContext({\n            headers: {\n            Authorization: `JWT ${token}`\n            }\n        });\n    },\n    clientState: {\n        defaults: {\n            isDriverLoggedIn: (localStorage.getItem(\"userType\") == UserType[\"Driver\"]),\n            isCustomerLoggedIn: (localStorage.getItem(\"userType\") == UserType[\"Customer\"]),\n            isAuthorizerLoggedIn: (localStorage.getItem(\"userType\") == UserType[\"Authorizer\"]),\n            isAdminLoggedIn: (localStorage.getItem(\"userType\") == UserType[\"Admin\"]),\n        }\n    }\n});\n\nconst IS_LOGGED_IN_QUERY = gql`\n    query {\n        isDriverLoggedIn @client\n        isCustomerLoggedIn \n        isAuthorizerLoggedIn\n        isAdminLoggedIn\n    }\n`;\n\nconst App = () =>{\n    console.log(localStorage.getItem(\"userType\"));\n    console.log(UserType[\"Admin\"]);\n    console.log(localStorage.getItem(\"userType\") === UserType[\"Admin\"]);\n    return (\n        <Query query={IS_LOGGED_IN_QUERY} >\n            {({ data , loading, error}) => {\n\n                if (loading) return <div> loading </div>;\n                if (error) return <Error error = {error}/>;\n\n                var isLoggedIn = [];\n                isLoggedIn[UserType[\"Driver\"]] = data.isDriverLoggedIn;\n                isLoggedIn[UserType[\"Customer\"]] = data.isCustomerLoggedIn;\n                isLoggedIn[UserType[\"Authorizer\"]] = data.isAuthorizerLoggedIn;\n                isLoggedIn[UserType[\"Admin\"]] = data.isAdminLoggedIn;\n\n                console.log(isLoggedIn[UserType[\"Driver\"]]);\n                console.log(isLoggedIn[UserType[\"Customer\"]]);\n                console.log(isLoggedIn[UserType[\"Authorizer\"]]);\n                console.log(isLoggedIn[UserType[\"Admin\"]]);\n                // console.log(localStorage.getItem(auth));\n\n                if (!isLoggedIn[UserType[\"Driver\"]] && !isLoggedIn[UserType[\"Customer\"]]\n                && !isLoggedIn[UserType[\"Authorizer\"]]&& !isLoggedIn[UserType[\"Admin\"]]) {\n                    return (\n                        <Switch>\n                            <Route exact path=\"/\" render={() => (<Nav isLoggedIn={isLoggedIn}/>)}/>\n\n                            <Route exact path=\"/driver/register\" render={() => (\n                                <Nav isLoggedIn={isLoggedIn} content={<DriverRegister/>}/>\n                            )}/>\n\n                            <Route exact path=\"/install\" render={() => (<Nav isLoggedIn={isLoggedIn} content={<Install/>}/>)}/>\n                        </Switch>\n                    )\n                }\n                return(\n                    <Query query={ME_QUERY} >\n                             {(meData) => {\n                                 if (meData.loading) return <Loading/>;\n                                 if (meData.error) return <Error error = {meData.error}/>;\n\n                                 const currentUser = meData.data.me;\n                                 console.log(meData.data);\n                                 if(isLoggedIn[UserType[\"Driver\"]]){\n                                     console.log(\"HERE\");\n                                     return <DriverRoot isLoggedIn = {isLoggedIn} currentUser = {currentUser}/>\n                                 }\n                                 if(isLoggedIn[UserType[\"Customer\"]]){\n                                     return <CustomerRoot isLoggedIn = {isLoggedIn} currentUser = {currentUser}/>\n                                 }\n                                 if(isLoggedIn[UserType[\"Authorizer\"]]){\n                                     return <AuthorizerRoot isLoggedIn = {isLoggedIn} currentUser = {currentUser}/>\n                                 }\n                                return <AdminRoot isLoggedIn = {isLoggedIn} currentUser = {currentUser}/>\n                             }}\n                    </Query>\n                )\n            }}\n        </Query>\n    )\n};\n\nconst ME_QUERY = gql`\n    {\n        me{\n            id\n        }\n    }\n`;\n\n\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <BrowserRouter>\n            <ConfigProvider direction='rtl' locale={fa_IR}>\n                <App />\n            </ConfigProvider>\n        </BrowserRouter>\n    </ApolloProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}